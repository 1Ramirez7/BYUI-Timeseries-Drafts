---
title: "Holt-Winters Method"
subtitle: "Chapter 3: Lesson 3"
format: html
editor: source
sidebar: false
---

```{r}
#| include: false
source("common_functions.R")
```

```{=html}
<script type="text/javascript">
 function showhide(id) {
    var e = document.getElementById(id);
    e.style.display = (e.style.display == 'block') ? 'none' : 'block';
 }
 
 function openTab(evt, tabName) {
    var i, tabcontent, tablinks;
    tabcontent = document.getElementsByClassName("tabcontent");
    for (i = 0; i < tabcontent.length; i++) {
        tabcontent[i].style.display = "none";
    }
    tablinks = document.getElementsByClassName("tablinks");
    for (i = 0; i < tablinks.length; i++) {
        tablinks[i].className = tablinks[i].className.replace(" active", "");
    }
    document.getElementById(tabName).style.display = "block";
    evt.currentTarget.className += " active";
 }    
</script>
```

## Learning Outcomes

{{< include outcomes/chapter_3_lesson_3_outcomes.qmd >}}





## Holt-Winters (Additive)

## Small Group Activity: Decomposition of Baltimore Crime Data (20 min)

### Background 

The City of Baltimore publishes crime data, which can be accessed through a query. 
This dataset is sourced from the City of Baltimore Open Data and is updated monthly. 
You can explore the data on [data.world](https://data.world/data-society/city-of-baltimore-crime-data).

Use the following code to import the data:


<!-- **Packages** -->
<!-- ```{r, warning=FALSE} -->
<!-- # library(dplyr) -->
<!-- # library(tidyr) -->
<!-- # library(ggplot2) -->
<!-- # library(tidyverse) -->
<!-- # library(dygraphs) -->
<!-- # library(tidyquant) -->
<!-- # library(forecast) -->
<!-- ``` -->



```{r}
#| code-fold: true
#| code-summary: "Show the code"

if (!require("pacman")) install.packages("pacman")
pacman::p_load("tsibble", "fable",
               "feasts", "tsibbledata",
               "fable.prophet", "tidyverse",
               "patchwork", "rio")

crime_df <- read.csv("https://query.data.world/s/gibquqj7violcatsd74xyyg7r4fwxp?dws=00000", header=TRUE, stringsAsFactors=FALSE)
```


```{r}
#| include: false
#| eval: false
# # Store the data, in case the query stops working
# rio::export(crime_df, "data/baltimore_crime.csv")
```


The data set consists of `r nrow(crime_df)` rows and `r ncol(crime_df)` columns. 
There are a few key variables:

- **Date and Time:** Records the date and time of each incident.
- **Location:** Detailed coordinates of each incident.
- **Crime Type:** Description of the type of crime.

When exploring a new time series, it is crucial to carefully examine the data. Here are a few rows of the original data set. 

```{r}
#| echo: false

# View data
crime_df |> 
  display_partial_table(6,1)
```


<!-- Check Your Understanding -->

::: {.callout-tip icon=false title="Check Your Understanding"}

-   Using the command `crime_df |> summary()`, we learn that the `Total.Incidents` always equals 1. What does each row in the data frame represent?

:::

```{r}
#| code-fold: true
#| code-summary: "Show the code"

# Data Summary and Aggregation
# Group by dates column and summarize from Total.Incidents column
daily_summary_df <- crime_df |>
  rename(dates = CrimeDate) |>
  group_by(dates) |>
  summarise(incidents = sum(Total.Incidents))


# Data Transformation and Formatting
# Select relevant columns, format dates, and arrange the data
crime_data <- daily_summary_df |>
  mutate(dates = mdy(dates)) |>
  mutate(
    month = month(dates),
    day = day(dates),
    year = year(dates)
  ) |>
  dplyr::select(dates, month, day, year, incidents) |>
  arrange(dates)

# Convert formatted data to a tsibble with dates as the index
crime_tsibble <- as_tsibble(crime_data, index = dates)
```

Here are a few rows of the summarized data.

```{r}
#| echo: false

# View data
daily_summary_df |>
  display_partial_table(6,3) 
```

The following table summarizes the number of days in each month for which crime data were reported.

```{r}
#| code-fold: true
#| code-summary: "Show the code"

crime_data |>
  mutate(month_char = format(as.Date(dates), '%b') ) |>
  group_by(month, month_char, year) |>
  summarise(n = n(), .groups = "keep") |>
  group_by() |>
  arrange(year, month) |>
  dplyr::select(-month) |>
  rename(Year = year) |>
  pivot_wider(names_from = month_char, values_from = n) |>
  display_table()
```


<!-- Check Your Understanding -->

::: {.callout-tip icon=false title="Check Your Understanding"}

-   What do you observe about the data?
-   What are some problems that could arise from incomplete data?
-   How do you recommend we address the missing data?

:::

Here is a time plot of the number of crimes reported in Baltimore daily.

```{r}
#| code-fold: true
#| code-summary: "Show the code"

# Time series plot of total incidents over time
crime_plot <- autoplot(crime_tsibble, .vars = incidents) +
  labs(
    x = "Time",
    y = "Total Crime Incidents",
    title = "Total Crime Incidents Over Time"
  ) +
  theme(plot.title = element_text(hjust = 0.5))

# Display the plot
crime_plot
```

<!-- Check Your Understanding -->

::: {.callout-tip icon=false title="Check Your Understanding"}

-   What do you notice about this time plot?
    - Describe the trend
    - Is there evidence of seasonality?
    - Is the additive or multiplicative model appropriate?
    - Which date has the highest number of recorded crimes? Can you determine a reason for this spike?

:::

### Monthly Summary

We could analyze the data at the daily level, but for simplicity we will model the monthly totals.

```{r}
#| code-fold: true
#| code-summary: "Show the code"

crime_monthly_ts <- crime_tsibble |>
  index_by(month_year = floor_date(as_date(dates), "month")) |>
  summarise(value = sum(incidents))

# Plot mean annual total incidents using autoplot
autoplot(crime_monthly_ts, .vars = value) +
  labs(
    x = "Year",
    y = "Total Monthly Crime Incidents",
  ) +
  theme(plot.title = element_text(hjust = 0.5))
```

There is incomplete data for `r temp <- crime_tsibble |> arrange(dates) |> as.data.frame() |> tail(1); temp |> dplyr::select(year) |> pull()`, as data were not provided after `r last_date <- temp |> dplyr::select(dates) |> pull(); paste0(month(last_date), "/", day(last_date), "/", year(last_date))`. We will only consider data through `r month(paste0(month(last_date)-1, "/1/", year(last_date)), label = TRUE, abbr = FALSE)` `r ifelse(month(last_date) == 1, year(last_date)-1, year(last_date))`.
<!-- ~ -->
<!-- This is hard-coded.. -->
We will omit any data after October 2016.

```{r}
#| code-fold: true
#| code-summary: "Show the code"

crime_monthly_ts <- crime_monthly_ts |>
  filter(month_year < mdy("10/31/2016"))
```


### Moving Average

We can use the following function to compute the moving average

```{r}
# compute moving average
compute_moving_average <- function(df, variable, periods = 12) {
  sum <- 0
  
  for (i in 1:(periods / 2)) {
    sum <- sum + lead(eval(substitute(variable), df), i)           # x_{t+i}
    sum <- sum + lag(eval(substitute(variable), df), i)            # x_{t-i}
  }

  sum <- sum + eval(substitute(variable), df)
  sum <- sum - lag(eval(substitute(variable), df), periods / 2) / 2
  sum <- sum - lead(eval(substitute(variable), df), periods / 2) / 2

  df$m_hat <- sum / periods

  return(df)
}

crime_decomposition <- crime_monthly_ts |>
  compute_moving_average(value)
```

Here are the first few rows of this new file. 
```{r}
#| echo: false

crime_decomposition |>
  head(13) |>
  display_table()
```

### Estimated Monthly Multiplicative Effect

<!-- Check Your Understanding -->

::: {.callout-tip icon=false title="Check Your Understanding"}

-   Use the 12-month centered moving average computed above to calculate the estimated monthly multiplictive effect.
-   Question1
-   Question2

:::


























**Calculate Mean Crime Incidents Monthly by Year**

```{r}
# Calculate mean annual total incidents
crime_annual_ts <- crime_tsibble |>
  index_by(year = year(dates)) |>
  summarise(value = mean(incidents))

# Plot mean annual total incidents using autoplot
autoplot(crime_annual_ts, .vars = value) +
  labs(
    x = "Year",
    y = "Mean Daily Crime Incidents",
    title = "Mean Daily Crime Incidents"
  ) +
  theme(plot.title = element_text(hjust = 0.5))
```


**Monthly Boxplots of Total Crime Incidents**

```{r}
# Create boxplots
ggplot(crime_tsibble, aes(x = as.factor(month), y = incidents)) +
  geom_boxplot() +
  labs(
    x = "Month",
    y = "Total Crime Incidents",
    title = "Boxplots of Total Crime Incidents by Month"
  ) +
  theme(plot.title = element_text(hjust = 0.5))
```



## Estimating the Trend: Moving Average (5 min)

```{r}
# Create a daily plot
dp <- autoplot(crime_tsibble, .vars = incidents) +
    labs(
      x = "Month",
      y = "Total Crime Incidents",
      title = "Total Crime Incidents Over Time"
    ) +
    theme(plot.title = element_text(hjust = 0.5))

  # Calculate mean monthly total incidents
  mean_monthly_incidents <- crime_tsibble |>
    as.data.frame() |>
    group_by(year, month) |>
    summarize(value = mean(incidents)) |>
  mutate(index = tsibble::yearmonth( mdy(paste0(month, "/15/", year)) )) |>
  as_tsibble(index = index)

  # Calculate mean annual total incidents
  mean_annual_incidents <- crime_tsibble |>
    as.data.frame() |>
    group_by(year) |>
    summarize(value = mean(incidents)) |>
  mutate(index = tsibble::yearmonth( mdy(paste0("7/1/",year)) )) |>
  as_tsibble(index = index)
```


```{r}
# Create a yearly plot
  yp <- ggplot(mean_annual_incidents, aes(x = year, y = value)) +
    geom_line() +
    labs(
      x = "Year",
      y = "Mean Total Crime Incidents",
      title = "Annual Mean Total Crime Incidents"
    ) +
    scale_x_continuous(breaks = seq(2004, max(crime_tsibble$year), by = 2)) +
    theme(plot.title = element_text(hjust = 0.5))

# Create a monthly plot
  mp <- ggplot(mean_monthly_incidents, aes(x = index, y = value)) +
    geom_line() +
    labs(
      x = "Year",
      y = "Mean Total Crime Incidents",
      title = "Monthly Mean Total Crime Incidents"
    ) +
    # scale_x_continuous(breaks = seq(2004, max(crime_tsibble$year), by = 2)) +
    theme(plot.title = element_text(hjust = 0.5))

  # Display both simultaneously
  dp / mp
  dp / yp

```







































## TO BE CONTINUED....










## Homework Preview (5 min)

-   Review upcoming homework assignment
-   Clarify questions












<a href="javascript:showhide('Solutions0')"
style="font-size:.8em;">Balitmore Crime Time Plot</a>

::: {#Solutions0 style="display:none;"}

```{r}
# Dates with high criminal activity
crime_data |> arrange(desc(incidents)) |> head()
```

On April 27, 2015, 419 crimes were recorded. These are associated with protests over arrest of Freddie Gray.
:::









<a href="javascript:showhide('Solutions')"
style="font-size:.8em;">Class Activity</a>

::: {#Solutions style="display:none;"}

Solutions to Class Activity

```{r}
#| echo: false
stuff <- "here"
```

:::

