---
title: "Transformations and Non-Linear Models"
subtitle: "Chapter 5: Lesson 4"
format: html
editor: source
sidebar: false
---

```{r}
#| include: false
source("common_functions.R")
```

```{=html}
<script type="text/javascript">
 function showhide(id) {
    var e = document.getElementById(id);
    e.style.display = (e.style.display == 'block') ? 'none' : 'block';
 }
 
 function openTab(evt, tabName) {
    var i, tabcontent, tablinks;
    tabcontent = document.getElementsByClassName("tabcontent");
    for (i = 0; i < tabcontent.length; i++) {
        tabcontent[i].style.display = "none";
    }
    tablinks = document.getElementsByClassName("tablinks");
    for (i = 0; i < tablinks.length; i++) {
        tablinks[i].className = tablinks[i].className.replace(" active", "");
    }
    document.getElementById(tabName).style.display = "block";
    evt.currentTarget.className += " active";
 }    
</script>
```


## Learning Outcomes

{{< include outcomes/chapter_5_lesson_4_outcomes.qmd >}}




## Preparation

-   Read Sections 5.7-5.8



## Learning Journal Exchange (10 min)

-   Review another student's journal

-   What would you add to your learning journal after reading another student's?

-   What would you recommend the other student add to their learning journal?

-   Sign the Learning Journal review sheet for your peer


## Class Activity: Simulate an Exponential Trend with a Seasonal Component (xxx min)

We will simulate code that has a seasonal component and impose an exponential trend.

```{r}
#| code-fold: true
#| code-summary: "Show the code"

n_months <- 96 # Number of months
mu <- 0
sigma <- .02

z_t <- rnorm(n = n_months, mean = mu, sd = sigma)


dates <- seq(floor_date(now(), unit = "year"), length.out=n_months + 1, by="-1 month") |>
  floor_date(unit = "month") |> sort() |> head(n_months)

sim_ts <- tibble(
  t = 1:n_months,
  dates = dates,
  x_t = exp(2 + 0.012 * t +
    0.03 * sin(2 * pi * t / 12) + 0.01 * cos(2 * pi * t / 12) + 
    0.01 * sin(2 * pi * 3.5 / 12) + 0.01 * cos(2 * pi * 1.75 / 12) +
    0.005 * sin(2 * pi * 7.5 / 12) + 0.0025 * cos(2 * pi * 8.5 / 12) +
    rnorm(n = n_months, mean = mu, sd = sigma)
    )
  ) |>
  mutate(
    cos1 = cos(2 * pi * 1 * t / 12),
    cos2 = cos(2 * pi * 2 * t / 12),
    cos3 = cos(2 * pi * 3 * t / 12),
    cos4 = cos(2 * pi * 4 * t / 12),
    cos5 = cos(2 * pi * 5 * t / 12),
    cos6 = cos(2 * pi * 6 * t / 12),
    sin1 = sin(2 * pi * 1 * t / 12),
    sin2 = sin(2 * pi * 2 * t / 12),
    sin3 = sin(2 * pi * 3 * t / 12),
    sin4 = sin(2 * pi * 4 * t / 12),
    sin5 = sin(2 * pi * 5 * t / 12),
    sin6 = sin(2 * pi * 6 * t / 12)) |>
  mutate(std_t = (t - mean(t)) / sd(t)) |>
  as_tsibble(index = dates)

sim_ts |>
    autoplot(.vars = x_t)

sim_ts |>
    autoplot(.vars = log(x_t))


```


```{r}
#| label: simulatedExponentialTS1
#| code-fold: true
#| code-summary: "Show the code"

# Cubic model with standardized time variable

full_cubic_lm <- sim_ts |>
  model(full_cubic = TSLM(x_t ~ std_t + I(std_t^2) + I(std_t^3) +
    sin1 + cos1 + sin2 + cos2 + sin3 + cos3 
    + sin4 + cos4 + sin5 + cos5 + cos6 ))

full_cubic_lm |>
  tidy() |>
  mutate(sig = p.value < 0.05) 

forecast_df <- full_cubic_lm |> forecast(sim_ts, ) |> as_tibble() |> dplyr::select(std_t, .mean) |> rename(pred = .mean)

sim_ts |>
  left_join(forecast_df, by = "std_t") |>
  as_tsibble(index = dates) |>
  autoplot(.vars = x_t) +
  geom_smooth(method = "lm", se = FALSE, color = "#F0E442") +
  geom_line(aes(y = pred), color = "#56B4E9", alpha = 0.75) +
    labs(
      x = "Month",
      y = "Mean Daily High Temperature (Fahrenheit)",
      title = "Time Plot of Mean Daily Rexburg High Temperature by Month",
      subtitle = paste0("(", format(sim_ts$dates %>% head(1), "%b %Y"), endash, format(sim_ts$dates %>% tail(1), "%b %Y"), ")")
    ) +
    theme_minimal() +
    theme(
      plot.title = element_text(hjust = 0.5),
      plot.subtitle = element_text(hjust = 0.5)
    )
```



```{r}
#| label: simulatedExponentialTS2
#| code-fold: true
#| code-summary: "Show the code"

# Logarithmic transformation of the time series

log_transform_lm <- sim_ts |>
  model(full_cubic = TSLM(log(x_t) ~ std_t + I(std_t^2) + I(std_t^3) +
    sin1 + cos1 + sin2 + cos2 + sin3 + cos3 
    + sin4 + cos4 + sin5 + cos5 + cos6 ))

log_transform_lm |>
  tidy() |>
  mutate(sig = p.value < 0.05) 

forecast_df <- log_transform_lm |> forecast(sim_ts, ) |> as_tibble() |> dplyr::select(std_t, .mean) |> rename(pred = .mean)

sim_ts |>
  left_join(forecast_df, by = "std_t") |>
  as_tsibble(index = dates) |>
  autoplot(.vars = x_t) +
  geom_smooth(method = "lm", se = FALSE, color = "#F0E442") +
  geom_line(aes(y = pred), color = "#56B4E9", alpha = 0.75) +
    labs(
      x = "Month",
      y = "Mean Daily High Temperature (Fahrenheit)",
      title = "Time Plot of Mean Daily Rexburg High Temperature by Month",
      subtitle = paste0("(", format(sim_ts$dates %>% head(1), "%b %Y"), endash, format(sim_ts$dates %>% tail(1), "%b %Y"), ")")
    ) +
    theme_minimal() +
    theme(
      plot.title = element_text(hjust = 0.5),
      plot.subtitle = element_text(hjust = 0.5)
    )


```



## Small Group Activity: SectionTitle (xxx min)
## Class Activity: SectionTitle (xxx min)


<!-- Check your Understanding -->

::: {.callout-tip icon=false title="Check Your Understanding"}

-   Question1
-   Question2

:::



## Small-Group Activity: Retail Sales (xxx min)

```{r}
#| label: retail1
# Read in retail sales data for "all other general merchandise stores"
retail_ts <- rio::import("data/retail_by_business_type.parquet") |>
  filter(naics == 45299) |>
  as_tsibble(index = month)

retail_ts |>
  autoplot(.vars = sales_millions) +
    labs(
      x = "Month",
      y = "Sales (Millions of U.S. Dollars)",
      title = paste0(retail_ts$business[1], " (", retail_ts$naics[1], ")")
    ) +
    theme_minimal() +
    theme(plot.title = element_text(hjust = 0.5))

```





## Homework Preview (5 min)

-   Review upcoming homework assignment
-   Clarify questions




::: {.callout-note icon=false}

## Download Homework

<a href="https://byuistats.github.io/timeseries/homework/homework_5_4.qmd" download="homework_5_4.qmd"> homework_5_4.qmd </a>

:::





<a href="javascript:showhide('Solutions1')"
style="font-size:.8em;">Class Activity</a>
  
::: {#Solutions1 style="display:none;"}
    

:::




<a href="javascript:showhide('Solutions')"
style="font-size:.8em;">Class Activity</a>
  
::: {#Solutions2 style="display:none;"}
    

:::




<a href="javascript:showhide('Solutions3')"
style="font-size:.8em;">Class Activity</a>
  
::: {#Solutions3 style="display:none;"}
    

:::



