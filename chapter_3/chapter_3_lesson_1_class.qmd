---
title: "Chapter 3: Lesson 1"
subtitle: "Leading Variables and Associated Variables"
format: html
editor: source
---

```{r}
#| include: false
source("../common_functions.R")

# Need mosaic for deg2rad and rad2deg
pacman::p_load(mosaic)
```



## Learning Outcomes

<details>
<summary>Explain the purpose and limitations of forecasting</summary>
    -   Define lead time
    -   Define forecasting
    -   Differentiate causation from correlation
</details>
<details>
<summary>Use cross-correlation analysis to quantify lead/lag relationships</summary>
    -   Explain forecasting by leading indicators
    -   Define the population k-lag ccvt
    -   Define the population k-lag ccf
    -   Define the sample k-lag ccvt
    -   Define the sample k-lag ccf
    -   Estimate an ccf for two time series
    -   Interpret whether a variable is a leading indicator using a cross-correlogram
</details>
<details>
<summary>Evaluate the limitations of forecasting models based on past trends</summary>
    -   Explain how unexpected future events may invalidate forecast trends
    -   Avoid over-extrapolation of fitted trends beyond reasonable time horizons
</details>


## Preparation

-   Read Sections 3.1-3.2


## Learning Journal Exchange (10 mins)

-   Review another student's journal

-   What would you add to your learning journal after reading another student's?

-   What would you recommend the other student add to their learning journal?

-   Sign the Learning Journal review sheet for your peer


## Leading Variables

```{r}
#| echo: false

# Read and clean rexburg weather data
weather_dat <- rio::import("../data/rexburg_weather.csv")

w2 <- weather_dat %>%
  dplyr::select("NAME", "DAY", "MONTH", "YEAR", "DATE", "TMAX") %>%
  pivot_wider(names_from = "NAME", values_from = c("TMAX")) %>%
  rename(
    "byui" = "REXBURG BYU IDAHO, ID US",
    "airport" = "REXBURG MADISON CO AIRPORT, ID US",
    "moody" = "MOODY IDAHO, ID US"
  )

w3 <- w2 %>%
  dplyr::select(byui, airport) %>%
  rename(x = byui, y = airport) %>%
  filter(abs(x - y)<50)
# plot(w3$x, w3$y)
lm_byu <- lm(y~x, data= w3)

w4 <- w2 %>%
  dplyr::select(moody, airport) %>%
  rename(x = moody, y = airport) %>%
  filter(abs(x - y)<50)
# plot(w4$x, w4$y)
lm_moody <- lm(y~x, data= w4)

weather_clean <- w2 %>%
  mutate(byui_pred = predict(lm_byu, data.frame(x=w2$byui))) %>%
  mutate(moody_pred = predict(lm_moody, data.frame(x=w2$moody))) %>%
  mutate(rexburg = airport) %>%
  mutate(rexburg =
           case_when(
             airport > 100 ~ byui_pred,
             !is.na(airport) ~ airport,
             !is.na(byui_pred) ~ byui_pred,
             !is.na(moody_pred) ~ moody_pred,
             TRUE ~ NA
           )
        ) %>%
  mutate(imputed = !(rexburg == round(rexburg, 0))) %>%
  mutate(rexburg = round(rexburg, 0)) %>%
  mutate(dates = mdy(DATE)) %>%
  filter(dates > mdy("08/31/1998")) %>%
  filter(!is.na(rexburg)) %>%
  rename(rexburg_airport_high = rexburg) %>%
  dplyr::select(dates, rexburg_airport_high, imputed) %>%
  filter(dates > mdy("01/01/1999"))

# weather_clean %>%
#   mutate(years = year(dates)) %>%
#   group_by(years) %>%
#   summarize(average = mean(rexburg_airport_high)) %>%
#   plot

rexburg_day <- weather_clean %>%
  mutate(date_seq = dates) %>%
  mutate(
  dates = date_seq,
  year = lubridate::year(date_seq),
  month = lubridate::month(date_seq),
  value = rexburg_airport_high
  ) %>%
  # Compute angle of the sun
  mutate(
    days_since_ref_date = as.integer(date_seq - mdy("12/31/2010")),
    declination = 23.45 * sin(deg2rad(360 * (284+days_since_ref_date)/365.25)),
    max_solar_angle = (sin(deg2rad(43.825386)) * sin(deg2rad(declination)) + cos(deg2rad(43.825386)) * cos(deg2rad(declination)) * cos(0)) |> asin() |> rad2deg()
  ) |>
  dplyr::select(-date_seq, -imputed, -days_since_ref_date, -declination) %>%
  tibble()

rexburg_daily_ts <- rexburg_day |>
  mutate(index = dates) |>
  as_tsibble(index = index)

rexburg_annual_ts <- summarise(index_by(rexburg_daily_ts, year), value = mean(value))

rexburg_weather_plot <- autoplot(rexburg_daily_ts %>% filter(year > 2016), .vars = value) +
  labs(
    x = "Date",
    y = "High Temp (F)",
    title = "Daily High Temperature in Rexburg, Idaho"
  ) +
  theme(plot.title = element_text(hjust = 0.5))


rexburg_weather_plot
```


























## Recap (5 min)

Working with your partner, prepare to explain the following concepts to the class:

