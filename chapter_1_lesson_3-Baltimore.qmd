---
title: "Additive and Multiplicative Models"
subtitle: "Chapter 1: Lesson 3"
format: html
editor: source
sidebar: false
---

```{r}
#| include: false
source("common_functions.R")
```

```{=html}
<script type="text/javascript">
 function showhide(id) {
    var e = document.getElementById(id);
    e.style.display = (e.style.display == 'block') ? 'none' : 'block';
 }

 function openTab(evt, tabName) {
    var i, tabcontent, tablinks;
    tabcontent = document.getElementsByClassName("tabcontent");
    for (i = 0; i < tabcontent.length; i++) {
        tabcontent[i].style.display = "none";
    }
    tablinks = document.getElementsByClassName("tablinks");
    for (i = 0; i < tablinks.length; i++) {
        tablinks[i].className = tablinks[i].className.replace(" active", "");
    }
    document.getElementById(tabName).style.display = "block";
    evt.currentTarget.className += " active";
 }
</script>
```

## Learning Outcomes

{{< include outcomes/chapter_1_lesson_3_outcomes.qmd >}}

## Preparation

-   Read Sections 1.1-1.4 and 1.5.1-1.5.3

## Learning Journal Exchange (15 min)

-   Review another student's journal
-   What would you add to your learning journal after reading your partner's?
-   What would you recommend your partner add to their learning journal?
-   Sign the Learning Journal review sheet for your peer



## STARTING HERE


### City of Baltimore Crime Data (2011-2016) Summary

#### Overview

- **Dataset Size:** 286,000 rows
- **Columns:** 12

## Key Information

- **Date and Time:** Records the date and time of each incident.
- **Location:** Detailed coordinates of each incident.
- **Crime Type:** Description of the type of crime.

#### Source

This dataset is sourced from the City of Baltimore Open Data and is updated monthly.

#### Data Access

Explore the data on [data.world](https://data.world/data-society/city-of-baltimore-crime-data).



**Packages**
```{r, warning=FALSE}
# library(dplyr)
# library(tidyr)
# library(ggplot2)
# library(tidyverse)
# library(dygraphs)
# library(tidyquant)
# library(forecast)


if (!require("pacman")) install.packages("pacman")
pacman::p_load("tsibble", "fable",
               "feasts", "tsibbledata",
               "fable.prophet", "tidyverse",
               "patchwork", "rio")
```



<!-- **Data Import** -->

<!-- ```{r} -->
<!-- df <- read.csv("https://query.data.world/s/gibquqj7violcatsd74xyyg7r4fwxp?dws=00000", header=TRUE, stringsAsFactors=FALSE) -->
<!-- ``` -->



<!-- **Data Summary and Aggregation** -->

<!-- ```{r} -->
<!-- # Group by CrimeDate column and summarize from Total.Incidents column -->
<!-- summary_df <- df %>% -->
<!--   group_by(CrimeDate) %>% -->
<!--   summarise( -->
<!--     total_incidents = sum(Total.Incidents), -->
<!--     average_incidents = mean(Total.Incidents), -->
<!--     max_incidents = max(Total.Incidents), -->
<!--     min_incidents = min(Total.Incidents) -->
<!--   ) -->
<!-- ``` -->


<!-- **Data Transformation and Formatting** -->

<!-- ```{r} -->
<!-- # Select relevant columns, format CrimeDate, and arrange the data -->
<!-- crime_data <- summary_df %>% -->
<!--   select(CrimeDate, total_incidents) %>% -->
<!--   mutate(CrimeDate = as.Date(CrimeDate, format = "%m/%d/%Y")) %>% -->
<!--   arrange(CrimeDate) -->

<!-- # Uncomment the line below to see the formatted table -->
<!-- # crim_data -->

<!-- ``` -->

<!-- **Create Time Series Data** -->

<!-- ```{r} -->
<!-- # Convert formatted data to tsibble with CrimeDate as the index -->
<!-- crime_tsibble <- as_tsibble(crime_data, index = CrimeDate) -->

<!-- # Uncomment the line below to see the tsibble -->
<!-- # crime_tsibble -->
<!-- ``` -->


<!-- **Monthly Plot of Total Incidents** -->

<!-- ```{r} -->
<!-- # Create a monthly plot of total incidents over time -->
<!-- crime_plot <- autoplot(crime_tsibble, .vars = total_incidents) + -->
<!--   labs( -->
<!--     x = "Month", -->
<!--     y = "Total Incidents", -->
<!--     title = "Total Incidents Over Time" -->
<!--   ) + -->
<!--   theme(plot.title = element_text(hjust = 0.5)) -->

<!-- # Display the plot -->
<!-- crime_plot -->
<!-- ``` -->



<!-- **Calculate Mean Annual Total Incidents** -->

<!-- ```{r} -->
<!-- # Calculate mean annual total incidents -->
<!-- crime_annual_ts <- crime_tsibble %>% -->
<!--   index_by(year = year(CrimeDate)) %>% -->
<!--   summarise(value = mean(total_incidents)) -->

<!-- # Uncomment the line below to see the table -->
<!-- # crime_annual_ts -->
<!-- ``` -->


<!-- **Convert to Time Series and Plot Mean Annual Total Incidents** -->

<!-- ```{r} -->
<!-- # Convert to ts object -->
<!-- crime_annual_ts_ts <- ts(crime_annual_ts$value, frequency = 1) -->

<!-- # Plot mean annual total incidents using autoplot -->
<!-- autoplot(crime_annual_ts_ts) + -->
<!--   labs( -->
<!--     x = "Year", -->
<!--     y = "Mean Total Incidents", -->
<!--     title = "Mean Annual Total Incidents" -->
<!--   ) + -->
<!--   theme_minimal() -->
<!-- ``` -->


<!-- **Monthly Boxplots of Total Incidents** -->

<!-- ```{r} -->
<!-- # Add a categorical month variable to the tsibble -->
<!-- crime_tsibble <- crime_tsibble %>% -->
<!--   mutate(month = factor(month(CrimeDate))) -->

<!-- # Create boxplots -->
<!-- ggplot(crime_tsibble, aes(x = month, y = total_incidents)) + -->
<!--   geom_boxplot() + -->
<!--   labs( -->
<!--     x = "Month", -->
<!--     y = "Total Incidents", -->
<!--     title = "Boxplots of Total Incidents by Month" -->
<!--   ) + -->
<!--   theme(plot.title = element_text(hjust = 0.5)) -->
<!-- ``` -->



<!-- ## Estimating the Trend: Moving Average (5 min) -->

<!-- ```{r} -->
<!-- # Assuming 'crime_tsibble' is your tsibble -->
<!-- crime_tsibble <- crime_tsibble %>% -->
<!--   mutate(year = year(CrimeDate))  # Extract year from CrimeDate -->

<!-- # Create a daily plot -->
<!-- dp <- autoplot(crime_tsibble, .vars = total_incidents) + -->
<!--     labs( -->
<!--       x = "Month", -->
<!--       y = "Total Incidents", -->
<!--       title = "Total Incidents Over Time" -->
<!--     ) + -->
<!--     theme(plot.title = element_text(hjust = 0.5)) -->

<!--   # Calculate mean monthly total incidents -->
<!--   mean_monthly_incidents <- crime_tsibble %>% -->
<!--     as.data.frame() |> -->
<!--     group_by(year, month) |> -->
<!--     summarize(value = mean(total_incidents)) |> -->
<!--   mutate(index = tsibble::yearmonth( mdy(paste0(month, "/15/", year)) )) |> -->
<!--   as_tsibble(index = index) -->

<!--   # Calculate mean annual total incidents -->
<!--   mean_annual_incidents <- crime_tsibble %>% -->
<!--     as.data.frame() |> -->
<!--     group_by(year) |> -->
<!--     summarize(value = mean(total_incidents)) |> -->
<!--   mutate(index = tsibble::yearmonth( mdy(paste0("7/1/",year)) )) |> -->
<!--   as_tsibble(index = index) -->
<!-- ``` -->


<!-- ```{r} -->
<!-- # Create a yearly plot -->
<!--   yp <- ggplot(mean_annual_incidents, aes(x = year, y = value)) + -->
<!--     geom_line() + -->
<!--     labs( -->
<!--       x = "Year", -->
<!--       y = "Mean Total Crime Incidents", -->
<!--       title = "Mean Total Crime Incidents" -->
<!--     ) + -->
<!--     scale_x_continuous(breaks = seq(2004, max(crime_tsibble$year), by = 2)) + -->
<!--     theme(plot.title = element_text(hjust = 0.5)) -->

<!-- # Create a monthly plot -->
<!--   mp <- ggplot(mean_monthly_incidents, aes(x = index, y = value)) + -->
<!--     geom_line() + -->
<!--     labs( -->
<!--       x = "Year", -->
<!--       y = "Mean Total Crime Incidents", -->
<!--       title = "Mean Total Crime Incidents" -->
<!--     ) + -->
<!--     # scale_x_continuous(breaks = seq(2004, max(crime_tsibble$year), by = 2)) + -->
<!--     theme(plot.title = element_text(hjust = 0.5)) -->

<!--   # Display both simultaneously -->
<!--   dp / mp -->
<!--   dp / yp -->

<!-- ``` -->



































<!-- ### Aggregate to the annual level -->

<!-- To help visualize what is happening with a time series, we often aggregate the data in the time series to the annual level. This can make it easier to spot a trend. The first plot is the time series plot of the raw data, and the second plot is a time series plot of the annual means. -->

<!-- ```{r} -->
<!-- chocolate_annual_ts <- summarise(index_by(chocolate_month_ts, year), value = mean(value)) -->

<!-- # monthly plot -->
<!-- mp <- autoplot(chocolate_month_ts, .vars = value) + -->
<!--   labs( -->
<!--     x = "Month", -->
<!--     y = "Searches", -->
<!--     title = "Relative Number of Google Searches for 'Chocolate'" -->
<!--   ) + -->
<!--   theme(plot.title = element_text(hjust = 0.5)) -->

<!-- # yearly plot -->
<!-- yp <- autoplot(chocolate_annual_ts, .vars = value) + -->
<!--   labs( -->
<!--     x = "Year", -->
<!--     y = "Searches", -->
<!--     title = "Mean Annual Google Searches for 'Chocolate'" -->
<!--   ) + -->
<!--   scale_x_continuous(breaks = seq(2004, max(chocolate_month_ts$year), by = 2)) + -->
<!--   theme(plot.title = element_text(hjust = 0.5)) -->

<!-- # display both simultaneously -->
<!-- mp / yp -->
<!-- ``` -->

<!-- ::: {.callout-tip icon="false" title="Check Your Understanding"} -->
<!-- -   What do you observe in the trend? -->
<!-- -   What do you suspect is causing this trend? -->
<!-- ::: -->



















<!-- ## Estimating the Seasonal Effect: Side-by-Side Boxplots by Month (10 min) -->

<!-- To better visualize the effect of seasonal variation, we can make box plots by month. -->

<!-- ```{r} -->
<!-- ggplot(chocolate_month_ts, aes(x = factor(month), y = value)) + -->
<!--     geom_boxplot() + -->
<!--   labs( -->
<!--     x = "Month Number", -->
<!--     y = "Searches", -->
<!--     title = "Boxplots of Google Searches for 'Chocolate' by Month" -->
<!--   ) + -->
<!--   theme(plot.title = element_text(hjust = 0.5)) -->
<!-- ``` -->

<!-- ::: {.callout-tip icon="false" title="Check Your Understanding"} -->
<!-- -   What do you observe? -->
<!-- -   Which months tend to have the most searches? Which months tend to have the fewest seraches? -->
<!--     -   Can you provide an explanation for this? -->
<!-- ::: -->


<!-- ## When to use additive vs. multiplicative decomposition (5 min) -->

<!-- <!-- -   Additive: Constant variance --> -->
<!-- <!-- -   Multiplicative: Variance grows with the value of the time series --> -->

<!-- ## Additive Decomposition -->

<!-- The additive model for a time series, $\{x_t\}$, is: -->

<!-- $$ -->
<!--   x_t = m_t + s_t + z_t -->
<!-- $$ -->

<!-- where $x_t$ is the observed series, $m_t$ is the trend, $s_t$ is the seasonal effect, $z_t$ is random variation, and $t = 1, 2, 3, \ldots, n$. We consider $z_t$ as a sequence of correlated random variables with mean 0. -->

<!-- The residual is the part of the time series that is not explained by the trend or the seasonal effect. This is an estimate of \$ For an additive model, the residual is computed as: $$ -->
<!--   Residual = Value - Trend - Seasonal -->
<!-- $$ -->

<!-- The code below produces a plot showing the original data in the time series, the trend, the seasonal effect, and the residual (random component). -->

<!-- ```{r} -->
<!-- #| warning: false -->

<!-- choc_decompose <- chocolate_month_ts |> -->
<!--     model(feasts::classical_decomposition(value, -->
<!--         type = "add"))  |> -->
<!--     components() -->

<!-- autoplot(choc_decompose) -->
<!-- ``` -->

<!-- ::: {.callout-tip icon="false" title="Check Your Understanding"} -->
<!-- -   How does the trend and seasonality compare to the plots made previously? -->
<!-- -   What do you observe in the residual? -->
<!--     -   Are there any unusual spikes? Use Google to try to determine what may have caused the usual spikes. -->
<!-- ::: -->

<!-- ## Hands-on Exercise: Exploring simulated time series data (10 min) -->

<!-- ### Additive Model -->

<!-- The following code simulates 10 years of a monthly time series with a linear trend and seasonal variation with an additive model. -->

<!-- ```{r} -->
<!-- #| warning: false -->

<!-- # Set random seed for reproducibility -->
<!-- set.seed(20) -->

<!-- # Set parameters & initialize vectors -->
<!-- num_years <- 10 -->
<!-- n <- 12 * num_years -->
<!-- sigma <- .75 -->
<!-- a <- 0.05 -->
<!-- b <- 1 -->
<!-- c <- 0.5 -->
<!-- trend <- seasonal <- x <- rep(0,n) -->
<!-- time_seq <- seq(1,n) -->

<!-- # Generate correlated error terms -->
<!-- w <- rnorm(n + 4, 0, 1) -->
<!-- z = w + lead(w,1) + lead(w,2) + lead(w,3) + lead(w,4) -->
<!-- z  = head(z, n) / 2 -->

<!-- # Get date -->
<!-- year_seq <- lubridate::year(today()) - num_years  + (time_seq - 1) %/% 12 -->
<!-- month_seq <- (time_seq - 1) %% 12 + 1 -->
<!-- date_seq <- ymd(paste0(year_seq,"-",month_seq,"-01")) -->

<!-- # Get data -->
<!-- for (t in 1:n) { -->
<!--   trend[t] <- a * t + 10 -->
<!--   seasonal[t] <- b * sin(t / 12 * 2 * pi * 1)  + c * cos(t / 12 * 2 * pi * 3) -->
<!--   x[t] <- trend[t] + seasonal[t] + z[t] -->
<!-- } -->

<!-- x_df <- data.frame(x = x, trend = trend, seasonal = seasonal) -->

<!-- start_year <- lubridate::year(today()) - num_years -->
<!-- start_date <- lubridate::ymd(paste0(start_year,"-01-01")) -->

<!-- # start_date <- lubridate::ymd("1958-01-01") -->
<!-- date_seq <- seq(start_date, -->
<!--     start_date + months(nrow(x_df)-1), -->
<!--     by = "1 months") -->

<!-- x_df_ts <- x_df |> -->
<!--     mutate( -->
<!--         date = date_seq, -->
<!--         Month = tsibble::yearmonth(date)) |> -->
<!--     as_tsibble(index = Month) -->
<!-- ``` -->

<!-- The code above has generated simulated data, where the trend is linear with equation -->

<!-- $$ -->
<!--   m_t = \frac{t}{20} -->
<!-- $$ -->

<!-- and the seasonal effect follows the function -->

<!-- $$ -->
<!--   s_t = \sin \left( \frac{t\pi}{6} \right) + \frac{1}{2}\cos\left(\frac{t \pi}{18} \right) + 5 -->
<!-- $$ -->

<!-- Letting $t$ represent the month number across 10 years, we simulate a time series. Click on the tabs below to compare the actual construction of the time series (using the components generated in the code above) to the decomposition in R. -->

<!-- ::: panel-tabset -->
<!-- #### Actual Construction -->

<!-- Here is a plot of the components of the simulated data. -->

<!-- ```{r} -->
<!-- #| code-fold: true -->
<!-- #| code-summary: "Show the code" -->

<!-- trend_plot <- ggplot(x_df_ts, aes(x=Month, y=trend)) + -->
<!--   geom_line() + -->
<!--   labs( -->
<!--     title="Plot of Trend", -->
<!--     x="Month", -->
<!--     y="Trend" -->
<!--     ) + -->
<!--   theme(plot.title = element_text(hjust = 0.5)) -->

<!-- seasonal_plot <- ggplot(x_df_ts, aes(x=Month, y=seasonal)) + -->
<!--   geom_line() + -->
<!--   labs( -->
<!--     title="Plot of Seasonal Effect", -->
<!--     x="Month", -->
<!--     y="Seasonal" -->
<!--     ) + -->
<!--   theme(plot.title = element_text(hjust = 0.5)) -->

<!-- # trend_plot / seasonal_plot -->


<!-- error_plot <- ggplot(x_df_ts, aes(x = Month, y = x - trend - seasonal)) + -->
<!--   geom_line() + -->
<!--   labs( -->
<!--     title="Plot of Random Error Term", -->
<!--     x="Month", -->
<!--     y="Random" -->
<!--   ) + -->
<!--   theme(plot.title = element_text(hjust = 0.5)) -->

<!-- x_plot <- ggplot(x_df_ts, aes(x=Month, y=x)) + -->
<!--   geom_line() + -->
<!--   labs( -->
<!--     title="Plot of Simulated Time Series", -->
<!--     x="Month", -->
<!--     y="x" -->
<!--   ) + -->
<!--   theme(plot.title = element_text(hjust = 0.5)) -->


<!-- # error_plot / x_plot -->

<!-- x_plot <- x_plot  + labs(title = "True (Simulated) Values", x = NULL) -->
<!-- trend_plot <- trend_plot + labs(title = NULL, x = NULL) -->
<!-- seasonal_plot <- seasonal_plot + labs(title = NULL, x = NULL) -->
<!-- error_plot <- error_plot + labs(title = NULL) -->


<!-- x_plot / trend_plot / seasonal_plot / error_plot -->
<!-- ``` -->

<!-- #### Decomposition -->

<!-- Now, we use R to decompose the time series $\{x_t\}$. -->

<!-- ```{r} -->
<!-- #| warning: false -->
<!-- #| code-fold: true -->
<!-- #| code-summary: "Show the code" -->

<!-- x_decompose <- x_df_ts |> -->
<!--     model(feasts::classical_decomposition(x, -->
<!--         type = "add"))  |> -->
<!--     components() -->

<!-- autoplot(x_decompose) -->
<!-- ``` -->

<!-- ```{r} -->
<!-- #| include: false -->
<!-- i <- c(0:n) -->
<!-- # a <- 0 -->
<!-- x <- a*i + b*sin(i/12*2*pi) + c*cos(i/12*2*pi*3) -->

<!-- df <- data.frame(i, x) -->

<!-- ggplot(df, aes(x=i, y=x)) + -->
<!--   geom_line() + -->
<!--   labs(title="Plot of Function", -->
<!--        x="i", -->
<!--        y="x") -->
<!-- ``` -->
<!-- ::: -->

<!-- ::: {.callout-tip icon="false" title="Check Your Understanding"} -->
<!-- -   How does the (estimated) decomposition compare to the theoretical values above? -->
<!--     -   How well is the trend estimated? -->
<!--     -   How well is the seasonal effect estimated? -->
<!--     -   How well is the random effect estimated? -->
<!-- -   Make changes to the simulated data and observe the effect on the plots -->
<!-- ::: -->

<!-- ### Note on Additive and Multiplicative Models in the Textbook and R -->

<!-- Both the textbook and R use the same model in the additive case: -->

<!-- $$ -->
<!--   x_t = m_t + s_t + z_t -->
<!-- $$ -->

<!-- However, there is a discrepancy in the definitions for the mulitplicative models. The textbook defines the multiplicative model as -->

<!-- $$ -->
<!--   x_t = m_t \cdot s_t + z_t -->
<!-- $$ but R defines the multiplicative model as -->

<!-- $$ -->
<!--   x_t = m_t \cdot s_t \cdot z_t -->
<!-- $$ You can investigate R's definition by executing this command in RStudio. -->

<!-- ```{r} -->
<!-- #| eval: false -->

<!-- ?classical_decomposition -->
<!-- ``` -->

<!-- ### Multiplicative Model -->

<!-- We use the same simulated data as before, but this time we apply R's multiplicative model. This implies that the error term, $z_t$, has a mean of 1, rather than 0. -->

<!-- ```{r} -->
<!-- # Set random seed for reproducibility -->
<!-- set.seed(123) -->

<!-- # Set parameters & initialize vectors -->
<!-- num_years <- 10 -->
<!-- n <- 12 * num_years -->
<!-- sigma <- .75 -->
<!-- a <- 0.03 -->
<!-- b <- 1 -->
<!-- c <- 0.5 -->
<!-- trend <- seasonal <- x <- rep(0,n) -->
<!-- time_seq <- seq(1,n) -->

<!-- # Generate correlated error terms -->
<!-- w <- rnorm(n + 4, 0.2, 0.1) # Changed to a mean of 1 and sd of 0.03 -->
<!-- z = w + lead(w,1) + lead(w,2) + lead(w,3) + lead(w,4) -->
<!-- z  = head(z, n) -->

<!-- # Get date -->
<!-- year_seq <- lubridate::year(today()) - num_years  + (time_seq - 1) %/% 12 -->
<!-- month_seq <- (time_seq - 1) %% 12 + 1 -->
<!-- date_seq <- ymd(paste0(year_seq,"-",month_seq,"-01")) -->

<!-- # Get data -->
<!-- for (t in 1:n) { -->
<!--   trend[t] <- exp(a * t) -->
<!--   seasonal[t] <- b * sin(t / 12 * 2 * pi * 1)  + c * cos(t / 12 * 2 * pi * 3) + 5 -->
<!--   x[t] <- trend[t] * seasonal[t] * z[t] # Note R's definition of the mult. model -->
<!-- } -->

<!-- x_df <- data.frame(x = x, trend = trend, seasonal = seasonal) -->

<!-- start_year <- lubridate::year(today()) - num_years -->
<!-- start_date <- lubridate::ymd(paste0(start_year,"-01-01")) -->

<!-- # start_date <- lubridate::ymd("1958-01-01") -->
<!-- date_seq <- seq(start_date, -->
<!--     start_date + months(nrow(x_df)-1), -->
<!--     by = "1 months") -->

<!-- x_df_ts <- x_df |> -->
<!--     mutate( -->
<!--         date = date_seq, -->
<!--         Month = tsibble::yearmonth(date)) |> -->
<!--     as_tsibble(index = Month) -->
<!-- ``` -->

<!-- The code above simulated data, where the trend is expoential with equation -->

<!-- $$ -->
<!--   m_t = e^{0.03 t} -->
<!-- $$ -->

<!-- and the seasonal effect follows the function -->

<!-- $$ -->
<!--   s_t = \sin \left( \frac{t\pi}{6} \right) + \frac{1}{2}\cos\left(\frac{t \pi}{18} \right) + 5 -->
<!-- $$ -->

<!-- Letting $t$ represent the month number across 10 years, we get: -->

<!-- ```{r} -->
<!-- #| echo: false -->

<!-- trend_plot <- ggplot(x_df_ts, aes(x=Month, y=trend)) + -->
<!--   geom_line() + -->
<!--   labs( -->
<!--     title="Plot of Trend", -->
<!--     x="Month", -->
<!--     y="Trend" -->
<!--     ) + -->
<!--   theme(plot.title = element_text(hjust = 0.5)) -->

<!-- seasonal_plot <- ggplot(x_df_ts, aes(x=Month, y=seasonal)) + -->
<!--   geom_line() + -->
<!--   labs( -->
<!--     title="Plot of Seasonal Effect", -->
<!--     x="Month", -->
<!--     y="Seasonal" -->
<!--     ) + -->
<!--   theme(plot.title = element_text(hjust = 0.5)) -->

<!-- # trend_plot / seasonal_plot -->


<!-- error_plot <- ggplot(x_df_ts, aes(x = Month, y = x / trend / seasonal)) + -->
<!--   geom_line() + -->
<!--   labs( -->
<!--     title="Plot of Random Error Term", -->
<!--     x="Month", -->
<!--     y="Random" -->
<!--   ) + -->
<!--   theme(plot.title = element_text(hjust = 0.5)) -->

<!-- x_plot <- ggplot(x_df_ts, aes(x=Month, y=x)) + -->
<!--   geom_line() + -->
<!--   labs( -->
<!--     title="Plot of Simulated Time Series", -->
<!--     x="Month", -->
<!--     y="x" -->
<!--   ) + -->
<!--   theme(plot.title = element_text(hjust = 0.5)) -->


<!-- # error_plot / x_plot -->

<!-- x_plot <- x_plot  + labs(title = "True (Simulated) Values", x = NULL) -->
<!-- trend_plot <- trend_plot + labs(title = NULL, x = NULL) -->
<!-- seasonal_plot <- seasonal_plot + labs(title = NULL, x = NULL) -->
<!-- error_plot <- error_plot + labs(title = NULL) -->


<!-- x_plot / trend_plot / seasonal_plot / error_plot -->
<!-- ``` -->

<!-- Now, we use R to decompose the time series $\{x_t\}$. -->

<!-- ```{r} -->
<!-- #| warning: false -->

<!-- x_decompose <- x_df_ts |> -->
<!--     model(feasts::classical_decomposition(x, -->
<!--         type = "mult"))  |> -->
<!--     components() -->

<!-- autoplot(x_decompose) -->
<!-- ``` -->

<!-- ```{r} -->
<!-- #| include: false -->
<!-- i <- c(0:n) -->
<!-- # a <- 0 -->
<!-- x <- a*i * ( b*sin(i/12*2*pi) + c*cos(i/12*2*pi*3) ) -->

<!-- df <- data.frame(i, x) -->

<!-- ggplot(df, aes(x=i, y=x)) + -->
<!--   geom_line() + -->
<!--   labs(title="Plot of Function", -->
<!--        x="i", -->
<!--        y="x") -->
<!-- ``` -->

<!-- ::: {.callout-tip icon="false" title="Check Your Understanding"} -->
<!-- -   How does the (estimated) decomposition compare to the theoretical values above? -->
<!--     -   How well is the trend estimated? -->
<!--     -   How well is the seasonal effect estimated? -->
<!--     -   How well is the random effect estimated? -->
<!-- -   Make changes to the simulated data and observe the effect on the plots -->
<!-- ::: -->

<!-- ### Which Model Should I Use? Additive or Multiplicative? -->

<!-- Compare the following two time series. -->

<!-- ```{r} -->
<!-- #| echo: false -->

<!-- # Read and clean rexburg weather data -->

<!-- # pacman::p_load("tsibble", "fable", -->
<!-- #                "feasts", "tsibbledata", -->
<!-- #                "fable.prophet", "tidyverse", -->
<!-- #                "patchwork", -->
<!-- #                "ggthemes", "see",   # for okabeito color scheme -->
<!-- #                "tidyverse", -->
<!-- #                "rio", -->
<!-- #                "lubridate" -->
<!-- # ) -->

<!-- weather_dat <- rio::import("https://byuistats.github.io/timeseries/data/rexburg_weather.csv") -->

<!-- w2 <- weather_dat %>% -->
<!--   dplyr::select("NAME", "DAY", "MONTH", "YEAR", "DATE", "TMAX") %>% -->
<!--   pivot_wider(names_from = "NAME", values_from = c("TMAX")) %>% -->
<!--   rename( -->
<!--     "byui" = "REXBURG BYU IDAHO, ID US", -->
<!--     "airport" = "REXBURG MADISON CO AIRPORT, ID US", -->
<!--     "moody" = "MOODY IDAHO, ID US" -->
<!--   ) -->

<!-- w3 <- w2 %>% -->
<!--   dplyr::select(byui, airport) %>% -->
<!--   rename(x = byui, y = airport) %>% -->
<!--   filter(abs(x - y)<50) -->
<!-- # plot(w3$x, w3$y) -->
<!-- lm_byu <- lm(y~x, data= w3) -->

<!-- w4 <- w2 %>% -->
<!--   dplyr::select(moody, airport) %>% -->
<!--   rename(x = moody, y = airport) %>% -->
<!--   filter(abs(x - y)<50) -->
<!-- # plot(w4$x, w4$y) -->
<!-- lm_moody <- lm(y~x, data= w4) -->

<!-- weather_clean <- w2 %>% -->
<!--   mutate(byui_pred = predict(lm_byu, data.frame(x=w2$byui))) %>% -->
<!--   mutate(moody_pred = predict(lm_moody, data.frame(x=w2$moody))) %>% -->
<!--   mutate(rexburg = airport) %>% -->
<!--   mutate(rexburg = -->
<!--            case_when( -->
<!--              airport > 100 ~ byui_pred, -->
<!--              !is.na(airport) ~ airport, -->
<!--              !is.na(byui_pred) ~ byui_pred, -->
<!--              !is.na(moody_pred) ~ moody_pred, -->
<!--              TRUE ~ NA -->
<!--            ) -->
<!--         ) %>% -->
<!--   mutate(imputed = !(rexburg == round(rexburg, 0))) %>% -->
<!--   mutate(rexburg = round(rexburg, 0)) %>% -->
<!--   mutate(dates = mdy(DATE)) %>% -->
<!--   filter(dates > mdy("08/31/1998")) %>% -->
<!--   filter(!is.na(rexburg)) %>% -->
<!--   rename(rexburg_airport_high = rexburg) %>% -->
<!--   dplyr::select(dates, rexburg_airport_high, imputed) %>% -->
<!--   filter(dates > mdy("01/01/1999")) -->

<!-- # weather_clean %>% -->
<!-- #   mutate(years = year(dates)) %>% -->
<!-- #   group_by(years) %>% -->
<!-- #   summarize(average = mean(rexburg_airport_high)) %>% -->
<!-- #   plot -->

<!-- rexburg_day <- weather_clean %>% -->
<!--   mutate(date_seq = dates) %>% -->
<!--   mutate( -->
<!--   dates = date_seq, -->
<!--   year = lubridate::year(date_seq), -->
<!--   month = lubridate::month(date_seq), -->
<!--   value = rexburg_airport_high -->
<!--   ) %>% -->
<!--   dplyr::select(-date_seq, -imputed) %>% -->
<!--   tibble() -->

<!-- rexburg_daily_ts <- rexburg_day |> -->
<!--   mutate(index = dates) |> -->
<!--   as_tsibble(index = index) -->

<!-- rexburg_annual_ts <- summarise(index_by(rexburg_daily_ts, year), value = mean(value)) -->

<!-- rexburg_weather_plot <- autoplot(rexburg_daily_ts, .vars = value) + -->
<!--   labs( -->
<!--     x = "Date", -->
<!--     y = "High Temp (F)", -->
<!--     title = "Daily High Temperature in Rexburg, Idaho" -->
<!--   ) + -->
<!--   theme(plot.title = element_text(hjust = 0.5)) -->

<!-- # mp <- autoplot(rexburg_daily_ts, .vars = value) + -->
<!-- #   labs(y = "high temperature") -->
<!-- # yp <- autoplot(rexburg_annual_ts) + -->
<!-- #   labs(y = "high temperature") -->
<!-- # # + -->
<!-- # #   scale_x_continuous(breaks = seq(1900, 2010, by = 2)) -->
<!-- # mp / yp -->



<!-- ##################### S&P 500 -->

<!-- replaceCommas<-function(x){ -->
<!--   x<-as.numeric(gsub("\\,", "", x)) -->
<!-- } -->

<!-- sp500_dat <- rio::import("https://byuistats.github.io/timeseries/data/sp500.csv") |> -->
<!--   mutate(dates = mdy(Date)) -->

<!-- sp500_day <- sp500_dat |> -->
<!--   mutate(date_seq = dates) |> -->
<!--   mutate( -->
<!--     dates = date_seq, -->
<!--     year = lubridate::year(date_seq), -->
<!--     month = lubridate::month(date_seq), -->
<!--     value = replaceCommas(Close) -->
<!--   ) |> -->
<!--   dplyr::select(-date_seq) |> -->
<!--   tibble() -->

<!-- sp500_ts <- sp500_day |> -->
<!--   mutate(index = dates) |> -->
<!--   as_tsibble(index = index) -->

<!-- # sp500_annual_ts <- summarise(index_by(sp500_ts, year), value = mean(value)) -->
<!-- # -->
<!-- # temp <- sp500_ts |> filter(month == 7 & day(dates) == 1) |> -->
<!-- #   select(Date, year) -->
<!-- # -->
<!-- # temp2 <- sp500_annual_ts |> -->
<!-- #   right_join(temp) -->

<!-- sp500_plot <- autoplot(sp500_ts, .vars = value) + -->
<!--   labs( -->
<!--     x = "Date", -->
<!--     y = "Closing Price", -->
<!--     title = "Daily Closing Price of the S&P 500 Stock Index" -->
<!--   )  + -->
<!--   theme(plot.title = element_text(hjust = 0.5)) -->


<!-- rexburg_weather_plot / sp500_plot -->
<!-- ``` -->

<!-- ::: {.callout-tip icon="false" title="Check Your Understanding"} -->
<!-- Complete a table like the following in your Learning Journal to compare characteristics of these two time series. (Swapping to the visual editor can make this much easier) -->

<!-- |                                          | Rexburg Temperature | S&P 500 Closing Price | -->
<!-- |---------------------------------|-------------------|--------------------| -->
<!-- | Deterministic or stochastic trend?       |                     |                       | -->
<!-- | Is there a seasonal effect?              |                     |                       | -->
<!-- | Is there evidence of cycles?             |                     |                       | -->
<!-- | Does the variation get bigger over time? |                     |                       | -->
<!-- | Additive or multiplicative model?        |                     |                       | -->
<!-- ::: -->

<!-- <!-- ## POSSIBLY: DEMONSTRATE THAT TWO UNRELATED TIME SERIES WILL BE CORRELATED IF THEY BOTH CONTAIN A TREND---------- --> -->

<!-- <!-- Compare Rexburg weather and Basel, Switzerland Weather. (Better yet, Melbourne, Austrailia) --> -->

<!-- ## Recap (5 min) -->

<!-- -   Review objectives and key concepts -->
<!-- -   Clarify questions on time series data -->

<!-- ## Homework -->

<!-- ::: {.callout-note icon="false"} -->
<!-- ## Download Assignment -->

<!-- <!-- ## need to update href link to correct files when we get them --> -->

<!-- <a href="https://byuistats.github.io/timeseries/homework/homework_1_2.qmd" download="homework_1_2.qmd"> homework_1_2.qmd </a> -->
<!-- ::: -->

<!-- <a href="javascript:showhide('Solutions')" -->
<!-- style="font-size:.8em;">Which Model? & Matching Solutions</a> -->

<!-- ::: {#Solutions style="display:none;"} -->
<!-- Solutions to Which Model Should I Use?: -->

<!-- |                                          | Rexburg Temperature | S&P 500 Closing Price | -->
<!-- |------------------------------------------|---------------------|-----------------------| -->
<!-- | Deterministic or stochastic trend?       | Deterministic       | Stochastic            | -->
<!-- | Is there a seasonal effect?              | Yes                 | No                    | -->
<!-- | Is there evidence of cycles?             | Yes                 | Yes                   | -->
<!-- | Does the variation get bigger over time? | No                  | Yes                   | -->
<!-- | Additive or multiplicative model?        | Additive            | Multiplicative        | -->

<!-- ::: {style="display: flex;"} -->
<!-- <div> -->

<!-- 1.  A figure with time on the horizontal axis and the value of a random variable on the vertical axis : F. Time Plot -->
<!-- 2.  A systematic change in a time series that does not appear to be periodic : G. Trend -->
<!-- 3.  Repeated pattern within each year (or any other time period) : D. Seasonal Variation -->
<!-- 4.  Repeated pattern that does not correspond to some fixed natural period : A. Cycle -->
<!-- 5.  Observations in which values are related to lagged observations of the same variable : B. Correlated (Serially Dependent) Data -->
<!-- 6.  Random trend that does not follow a discernible or predictable pattern : E. Stochastic Trend -->
<!-- 7.  Can be modeled with mathematical functions, facilitating the long-term prediction of the behavior : C. Deterministic Trend -->
<!-- 8.  Number of observations of a time series : H. $n$ -->
<!-- 9.  Discrete observations of a time series, taken at times $1, 2, \ldots, n$. : I. $\{x_t\}$ -->
<!-- 10. Lead time : J. $k$ -->
<!-- 11. Forecast made at time $t$ for a future value $k$ time units in the future : K. $\hat x_{t+k \mid t}$ -->
<!-- 12. Additive decomposition : S. $x_t = m_t + s_t + z_t$ -->
<!-- 13. Additive decomposition model after taking the logarithm : U. $\log(x_t) = m_t + s_t + z_t$ -->
<!-- 14. Multiplicative model : T. $x_t = m_t \cdot s_t + z_t$ -->
<!-- 15. Centered moving average : M. $\hat m_t$ -->
<!-- 16. Estimate of monthly additive effect : O. $\hat s_t = x_t - \hat m_t$ -->
<!-- 17. Estimate of monthly multiplicative effect : P. $\hat s_t = \dfrac{x_t}{\hat m_t}$ -->
<!-- 18. Seasonally adjusted mean for the month corresponding to time $t$ : Q. $\bar s_t$ -->
<!-- 19. Seasonal adjusted series (additive seasonal effect) : V. $x_t - \bar s_t$ -->
<!-- 20. Seasonal adjusted series (multiplicative seasonal effect) : W. $\frac{x_t}{\bar s_t}$ -->
<!-- 21. The trend as observed at time $t$ : L. $m_t$ -->
<!-- 22. The seasonal effect, as observed at time $t$ : N. $s_t$ -->
<!-- 23. The error term (a sequence of correlated random variables with mean zero), as observed at time $t$ : R. $z_t$ -->

<!-- </div> -->
<!-- ::: -->
<!-- ::: -->
