{
  "hash": "6c8c6a79553eb7cd89cb425eda0021b3",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"White Noise and Random Walks - Part 1\"\nsubtitle: \"Chapter 4: Lesson 1\"\nformat: html\neditor: source\nsidebar: false\n---\n\n\n\n```{=html}\n<script type=\"text/javascript\">\n function showhide(id) {\n    var e = document.getElementById(id);\n    e.style.display = (e.style.display == 'block') ? 'none' : 'block';\n }\n \n function openTab(evt, tabName) {\n    var i, tabcontent, tablinks;\n    tabcontent = document.getElementsByClassName(\"tabcontent\");\n    for (i = 0; i < tabcontent.length; i++) {\n        tabcontent[i].style.display = \"none\";\n    }\n    tablinks = document.getElementsByClassName(\"tablinks\");\n    for (i = 0; i < tablinks.length; i++) {\n        tablinks[i].className = tablinks[i].className.replace(\" active\", \"\");\n    }\n    document.getElementById(tabName).style.display = \"block\";\n    evt.currentTarget.className += \" active\";\n }    \n</script>\n```\n\n\n\n## Learning Outcomes\n\n\n<details>\n\n<summary>Characterize the properties of discrete white noise</summary>\n-   Define Residual error\n-   Define discrete white noise (DWN)\n-   Define Gaussian white noise\n-   Simulate Gaussian white noise with R\n-   Plot DWN simulation results\n-   State DWN second order properties\n-   Explain how to estimate (or fit) a DWN process\n-   State the assumptions needed to categorize residual error series as white noise\n\n</details>\n\n\n<details>\n\n<summary>Characterize the properties of a random walk</summary>\n-   Define a random walk\n\n</details>\n\n<details>\n\n<summary>Simulate realizations from basic time series models in R </summary>\n-   Simulate a random walk\n-   Plot a random walk\n\n</details>\n\n\n\n\n\n## Preparation\n\n-   Read Sections 4.1-4.2, 4.3.1-4.3.5\n\n## Learning Journal Exchange (10 min)\n\n-   Review another student's journal\n\n-   What would you add to your learning journal after reading another student's?\n\n-   What would you recommend the other student add to their learning journal?\n\n-   Sign the Learning Journal review sheet for your peer\n\n## Class Activity: White Noise (15 min)\n\n::: {.callout-important icon=\"true\" title=\"Don't Forget\"}\nAlways validate your data before analysis.\n:::\n\n\n### Definition\n\nIn this class, we are learning to investigate different types of time series. Up to this point, we have focused mostly on time series with distinct seasonal behavior. We will not focus on what are called *stochastic processes* or random processes, where there is not necessarily a seasonal component. We first focus on **white noise**.\n\n Check Your Understanding \n\n::: {.callout-tip icon=\"false\" title=\"Check Your Understanding\"}\n-   Based on your understanding from the reading, explain the concept of white noise to your partner.\n-   Can you give an example of a time series that would represent white noise?\n:::\n\n::: {.callout-note icon=\"false\" title=\"Definition of a Discrete White Noise (DWN) Process\"}\nA time series $\\{w_t: t = 1, 2, \\ldots, n\\}$ is a **discrete white noise (DWN)** if the variables $w_1, w_2, \\ldots, w_n$ are independent and identically distributed with mean 0. The assumption that the variables are identically distributed implies that there is a common variance denoted $\\sigma$. The assumption of independence means that the covariance (and correlation) between different variables will be zero: $cov(w_i, w_j) = 0$ and $cor(w_i, w_j) = 0$ if $i \\ne j$.\n\nIf the variables are normally distributed, i.e. $w_i \\sim N(0,\\sigma^2)$, the DWN is called a **Gaussian white noise** process. The normal distribution is also known as the Gaussian distribution, after Carl Friedrich Gauss.\n:::\n\n### Simulation\n\nThe following simulation illustrates a white noise time series.\n\nshinny app\n\n Check Your Understanding \n\n::: {.callout-tip icon=\"false\" title=\"Check Your Understanding\"}\n-   What do you notice about this time series?\n-   What characteristics do you observe in the correlogram?\n:::\n\n### Type I Errors\n\nIn your introductory statistics course, you probably learned about Type I error. Here is a quick refresher.\n\n::: {.callout-note icon=\"false\" title=\"Type I Errors\"}\nSuppose we will conduct a hypothesis test with a level of significance equal to $\\alpha = 0.05$. If the null hypothesis is true, there is a probability of 0.05 that we will reject the null hypothesis. Due to sampling variation, we will reject a true null hypothesis 5% of the time. We refer to this as making a **Type I Error**.\n:::\n\n\n\n\n\n\nWhen we create a correlogram, we actually conduct one hypothesis test for each value of $k$. With so many hypothesis tests, it is not surprising if some of them show a significant correlation due to chance alone. In this case, we tend to disregard correlations that are barely significant and inexplicable.\n\n Check Your Understanding \n\n::: {.callout-tip icon=\"false\" title=\"Check Your Understanding\"}\nDo the following with a partner:\n\n1.  Click on the \\[Simulate!\\] button above to generate a new simulated realization of the DWN process.\n2.  Out of the 20 autocorrelations represented in the correlogram, count the number that are statistically significant.\n3.  Repeat Steps 1. and 2. ten times, so you will have displayed 200 autocorrelations.\n\n-   What percentage of your autocorrelations were statistically significant?\n-   Compare your results with other teams.\n-   What percentage of these would you expect to be statistically significant, assuming the true autocorrelations are all zero?\n:::\n\n### Visualizing White Noise\n\nThe data in the file [white_noise.parquet](https://byuistats.github.io/timeseries/data/white_noise.parquet) were generated by a Gaussian white noise process.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\n# This code was used to create the white noise data file\n\n# Set random seed\nset.seed(10)\n\n# Specify means and standard deviation\nn <- 2500                           # number of points\nwhite_noise_sigma <- rnorm(1, 5, 1) # choose a random standard deviation\n\n# Simulate normal data\ndata.frame(x = rnorm(n, 0, white_noise_sigma)) |>\n  rio::export(\"data/white_noise.parquet\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# White noise data\nwhite_noise_df <- rio::import(\"https://byuistats.github.io/timeseries/data/white_noise.parquet\")\n```\n:::\n\n\n\nThe first 250 points in this time series are illustrated here:\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nwhite_noise_df |> \n  mutate(t = 1:nrow(white_noise_df)) |>\n  head(250) |>  \n  ggplot(aes(x = t, y = x)) + \n    geom_line() +\n    theme_bw() +\n    labs(\n      x = \"Time\",\n      y = \"Values\",\n      title = \"First 250 Values of a Gaussian White Noise Time Series\"\n    ) +\n    theme(\n      plot.title = element_text(hjust = 0.5)\n    )\n```\n\n::: {.cell-output-display}\n![](chapter_4_lesson_1_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\nHere is a histogram of the 2500 values from this DWN distribution.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nwhite_noise_df |>\n  mutate(density = dnorm(x, mean(white_noise_df$x), sd(white_noise_df$x))) |>\n  ggplot(aes(x = x)) +\n    geom_histogram(aes(y = after_stat(density)),\n        color = \"white\", fill = \"#56B4E9\", binwidth = 1) +\n    geom_line(aes(x = x, y = density)) +\n    theme_bw() +\n    labs(\n      x = \"Values\",\n      y = \"Frequency\",\n      title = \"Histogram of Values from a Gaussian White Noise Process\"\n    ) +\n    theme(\n      plot.title = element_text(hjust = 0.5)\n    )\n```\n\n::: {.cell-output-display}\n![](chapter_4_lesson_1_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\nNotice that the values follow a normal distribution. This suggests the data are from a Gaussian white noise distribution.\n\n### Second-Order Properties of Discrete White Noise\n\nWhen we refer to the second-order properties of a time series, we are talking about its variance and covariance. The mean is a first-order property, the covariance is a second-order property.\n\n::: {.callout-note icon=\"false\" title=\"Second-Order Properties of a Discrete White Noise Process\"}\nIf $\\{w_t\\}_{t=1}^n$ is a DWN time series, then the population has the following properties.\n\n$$ \\mu_w = 0 $$ and $$\n  cov(w_t, w_{t+k}) = \n    \\begin{cases}\n      \\sigma^2, & k = 0 \\\\\n      0,        & k \\ne 0\n    \\end{cases}\n$$ The correlation function is therefore\n\n$$\n  \\rho_k = \n    \\begin{cases}\n      1, & k = 0 \\\\\n      0, & k \\ne 0\n    \\end{cases}\n$$\n:::\n\nNote that the properties given above are theoretical properties of the population, not estimates computed using a sample. The sample autocorrelations will not equal zero, due to randomness inherent in sampling.\n\n### Fitting the White Noise Model\n\nTypically, a DWN series arises in the random component of another time series. If we have fully explained the level and seasonality in the time series, then the only component left is the random component, which would ideally follow a DWN process.\n\n::: {.callout-note icon=\"false\" title=\"Identifying of a Discrete White Noise Process\"}\nA DWN process will have the following properties:\n\n-   There is a discrete observations.\n-   The mean of the observations is zero.\n-   The variance of the observations is finite.\n-   Successive observations are uncorrelated.\n:::\n\nSince the mean of a DWN time series is zero, the only parameter we need to fit is the variance.\n\n Check Your Understanding \n\n::: {.callout-tip icon=\"false\" title=\"Check Your Understanding\"}\n-   Compute the sample variance for the DWN data in the file [white_noise.parquet](https://byuistats.github.io/timeseries/data/white_noise.parquet).\n:::\n\n## Class Activity: Random Walks (15 min)\n\n### Definitions\n\n<a id=\"randomwalk\">Consider</a> moving on a number line, where your movements are determined by a discrete white noise (DWN) process. Each successive value indicates how far you will move along the number line from your current position. This is mathematically equivalent to allowing your position at time $t$ to be the sum of all the observed DWN values up to time $t$.\n\n::: {.callout-note icon=\"false\" title=\"Definition of a Random Walk\"}\nLet $\\{x_t\\}$ be a time series. Then, $\\{x_t\\}$ is a **random walk** if it can be expressed as $$\n  x_{t} = x_{t-1} + w_{t}\n$$ where $\\{w_t\\}$ is a random process.\n:::\n\nThe value $x_t$ can be considered as the cumulative summation of the first $t$ values of the $w_t$ series. In many cases, $w_t$ is a discrete white noise series, and it is often modeled as a Gaussian white noise series. However, $w_t$ could be as simple as a coin toss, as illustrated in the next activity.\n\n### Simulating a Random Walk\n\nIn this activity, we will simulate a discrete-time, discrete-space random walk.\n\n::: {.callout-tip appearance=\"minimal\"}\nDo the following:\n\n1.  Start the time series at $x_0 = 0$.\n\n2.  Toss a coin.\n\n    -   If the coin shows heads, then $x_t = x_{t-1}+1$\n    -   If the coin shows tails, then $x_t = x_{t-1}-1$\n\n3.  Plot the new point on the time plot.\n\n4.  Complete steps 2 and 3 a total of $n=60$ times. (One realization is illustrated below.)\n\n\n\n\n```{.r .cell-code}\nset.seed(7)\n\ndf <- data.frame(x=0:60) |>\n  mutate(w = ifelse(row_number() == 1, 0, sample(c(-1,1), size = 60, replace = TRUE))) |>\n  mutate(y = cumsum(w))\n\nggplot(data=df, aes(x=x, y=y)) +\n  # geom_point(data = df2, aes(x=x, y=y), size = 0.01) +\n  geom_line() +\n  geom_point(size = 0.5) +\n  scale_x_continuous(limits = c(0,60),\n                     breaks = seq(0, 60, by = 5),\n                     minor_breaks = seq(0, 60, 1)) +\n  scale_y_continuous(limits = c(-20,20),\n                     breaks = seq(-20, 20, by = 5),\n                     minor_breaks = seq(-20, 20, 1)) +\n  labs(\n      x = \"Toss Number\",\n      y = expression(paste(\"$x_t$\")),\n      title = \"Cumulative Results of Coin Tosses\"\n  ) +\n  theme_minimal() +\n  theme(\n    panel.grid.major = element_line(colour = \"black\")\n  ) +\n  theme(\n    plot.title = element_text(hjust = 0.5)\n  )\n```\n\n![](chapter_4_lesson_1_files/figure-html/unnamed-chunk-6-1.png){width=672}\n\n\n:::\n\n Check Your Understanding \n\n::: {.callout-tip icon=\"false\" title=\"Check Your Understanding\"}\n-   How would you describe a random walk to someone who has not taken this class?\n-   How is a random walk related to a discrete white noise (DWN) process?\n-   Give a real-world example of a process that could be modeled by a random walk.\n:::\n\n### Representations for a Random Walk\n\nRecall the definition of a random walk:\n\n$\\{x_t\\}$ is a **random walk** if it can be expressed as $$\n  x_{t} = x_{t-1} + w_{t}\n$$ where $\\{w_t\\}$ is a white noise series.\n\n Check Your Understanding \n\n::: {.callout-tip icon=\"false\" title=\"Check Your Understanding\"}\nThere are other ways to represent a random walk.\n\n-   Notice that \\begin{align*}\n      x_{t} &= x_{t-1} + w_{t} \\\\\n      x_{t-1} &= x_{t-2} + w_{t-1} \\\\\n      ⋮ ~~~ & ~~~~~~~~~~~~~~~ ⋮\n    \\end{align*} Use this to write $x_t$ in terms of $x_{t-2}$, $w_t$, and $w_{t-1}$.\n\n-   Write $x_t$ in terms of $x_{t-3}$, $w_t$, $w_{t-1}$, and $w_{t-2}$.\n\n-   Explain why it is possible to write $x_t$ as $$\n      x_{t} = \\sum\\limits_{i=-\\infty}^{t} w_{i} = w_{t} + w_{t-1} + w_{t-2} + w_{t-3} + \\cdots\n    $$ where $\\{w_t\\}$ is a DWN time series.\n\n    Note that if the random walk is finite, we can write $x_t$ as: $$\n      x_{t} = w_1 + w_2 + w_3 + \\cdots + w_{t-3} + w_{t-2} + w_{t-1} + w_{t} \n    $$ where $x_1=w_1$.\n:::\n\n Note that this implies that: \n\n \\begin{align*} \n\n   x_{t} &= x_{t-1} + w_{t} \\\\ \n\n   x_{t-1} &= x_{t-2} + w_{t-1} \\\\ \n\n   x_{t-2} &= x_{t-3} + w_{t-2} \\\\ \n\n   x_{t-3} &= x_{t-4} + w_{t-3} \\\\ \n\n   \\vdots ~~ &= ~~~~~~~~~~~~ \\vdots \\\\ \n\n   x_{4} &= x_{3} + w_{4} \\\\ \n\n   x_{3} &= x_{2} + w_{3} \\\\ \n\n   x_{2} &= x_{1} + w_{2} \\\\ \n\n   x_{1} &= w_{1}  \n\n \\end{align*} \n\n We can write this as \n\n \\begin{align*} \n\n   x_{t}  \n\n     &= x_{t-1} + w_{t} \\\\ \n\n     &= \\underbrace{x_{t-2} + w_{t-1}} + w_{t} \\\\ \n\n     &= \\underbrace{x_{t-3} + w_{t-2}} + w_{t-1} + w_{t} \\\\ \n\n     &= \\underbrace{x_{t-4} + w_{t-3}} + w_{t-2} + w_{t-1} + w_{t} \\\\ \n\n     &= ~~~~ \\vdots \\\\ \n\n     &= \\underbrace{x_3 + w_4} + \\cdots + w_{t-4} + w_{t-3} + w_{t-2} + w_{t-1} + w_{t} \\\\ \n\n     &= \\underbrace{x_2 + w_3} + w_4 + \\cdots + w_{t-4} + w_{t-3} + w_{t-2} + w_{t-1} + w_{t} \\\\ \n\n     &= \\underbrace{x_1 + w_2} + w_3 + w_4 + \\cdots + w_{t-4} + w_{t-3} + w_{t-2} + w_{t-1} + w_{t} \\\\ \n\n     &= w_1 + w_2 + w_3 + w_4 + \\cdots + w_{t-4} + w_{t-3} + w_{t-2} + w_{t-1} + w_{t}  \n\n \\end{align*} \n\n## Class Activity: Backward Shift Operator (10 min)\n\n### Definition of the Backward Shift Operator\n\nThis process of *back substitution* is so common, we define notation to handle it.\n\n::: {.callout-note icon=\"false\" title=\"Definition of the Backward Shift Operator\"}\nWe define the **backward shift operator** or the **lag operator**, $\\mathbf{B}$, as: $$\n  \\mathbf{B} x_t = x_{t-1}\n$$ where $\\{x_t\\}$ is any time series.\n\nWe can apply this operator repeatedly. We will use exponential notation to indicate this.\n\n$$\n  \\mathbf{B}^2 x_t = \\mathbf{B} \\mathbf{B} x_t = \\mathbf{B} ( \\mathbf{B} x_t ) = \\mathbf{B} x_{t-1} = x_{t-2}\n$$\n\nIn general, $$\n  \\mathbf{B}^n x_t = \\underbrace{\\mathbf{B} \\cdot \\mathbf{B} \\cdot \\cdots \\cdot \\mathbf{B}}_{n ~ \\text{terms}} x_t = \\mathbf{B}^{n-1} ( \\mathbf{B} x_t ) = \\mathbf{B}^{n-1} ( x_{t-1} ) = \\mathbf{B}^{n-2} ( x_{t-2} ) = \\cdots = \\mathbf{B} x_{t-(n-1)} = x_{t-n}\n$$\n:::\n\n### Properties of the Backshift Operator\n\nThe backwards shift operator is a linear operator. So, if $a$, $b$, $c$, and $d$ are constants, then $$\n(a \\mathbf{B} + b)x_t = a \\mathbf{B} x_t + b x_t\n$$ The distributive property also holds. \\begin{align*}\n(a \\mathbf{B} + b)(c \\mathbf{B} + d) x_t \n  &= c (a \\mathbf{B} + b) \\mathbf{B} x_t  + d(a \\mathbf{B} + b) x_t \\\\\n  &= a \\mathbf{B} (c \\mathbf{B} + d) x_t + b (c \\mathbf{B} + d) x_t \\\\\n  &= \\left( ac \\mathbf{B}^2 + (ad+bc) \\mathbf{B} + bd \\right) x_t \\\\\n  &= ac \\mathbf{B}^2 x_t + (ad+bc) \\mathbf{B} x_t + (bd) x_t\n\\end{align*}\n\nWe will practice applying this operator.\n\n Check Your Understanding \n\n::: {.callout-tip icon=\"false\" title=\"Check Your Understanding\"}\nLet $\\{x_t\\}$ be a time series with the following values.\n\n<center>\n\n\n\n$x_{1} = 5$,$~$ $x_{2} = 10$,$~$ $x_{3} = 13$,$~$ $x_{4} = 8$,$~$ $x_{5} = 4$,$~$ $x_{6} = 3$,$~$ $x_{7} = 9$,$~$ $x_{8} = 2$\n\n\n\n</center>\n\nEvaluate the following.\n\n-   $\\mathbf{B} x_8$\n-   $\\mathbf{B}^5 x_8$\n-   $(\\mathbf{B}^5 - \\mathbf{B} ) x_8$\n-   $( \\mathbf{B}^2 - 6 \\mathbf{B} + 9 ) x_8$\n-   $( (\\mathbf{B} - 6 )\\mathbf{B} + 9 ) x_8$\n-   $( \\mathbf{B} - 3 )^2 x_8 =  ( \\mathbf{B} - 3 ) \\left[ ( \\mathbf{B} - 3 ) x_8 \\right]$\n-   $( 1 - \\frac{1}{2} \\mathbf{B} - \\frac{1}{4} \\mathbf{B}^2 - \\frac{1}{8} \\mathbf{B}^3 ) x_8$\n:::\n\n## Class Activity: Properties of Random Walks (5 min)\n\n### Simulation\n\nThe following simulation illustrates a random walk.\n\nshiny code\n\n Check Your Understanding \n\n::: {.callout-tip icon=\"false\" title=\"Check Your Understanding\"}\n-   What do you notice about this time series?\n-   What characteristics do you observe in the correlogram?\n-   How does this compare to the time series and correlogram for the DWN process?\n:::\n\n### Second-Order Properties of a Random Walk\n\nThe second-order properties of a random walk are summarized below.\n\n:::: {.callout-note icon=\"false\" title=\"Second-Order Properties of a Random Walk\"}\nIf $\\{x_t\\}_{t=1}^n$ is a random walk, then the population has the following properties.\n\n$$ \\mu_x = 0 $$ and $$\n  cov(x_t, x_{t+k}) = t \\sigma^2$$\n\n\n::: {.callout-tip title=\"Click here for a proof of the equation for $cov(x_t,x_{t+k})$\" collapse=\"true\"}\nWhy is $cov(x_t, x_{t+k}) = t \\sigma^2$?\n\nFirst, note that that since the terms in the white noise series are independent,\n\n$$cov ( w_i, w_j ) = \n  \\begin{cases}\n    \\sigma^2, & \\text{if } ~ i=j \\\\\n    0, & \\text{otherwise}\n  \\end{cases}$$\n\n\nAlso, when random variables are independent, the covariance of a sum is the sum of the covariance.\n\nHence, \\begin{align*}\n  cov(x_t, x_{t+k})\n    &= cov ( \\sum_{i=1}^t w_i, \\sum_{j=1}^{t+K} w_j ) \\\\\n    &= \\sum_{i=j} cov ( w_i, w_j ) \\\\\n    &= \\sum_{i=1}^t \\sigma^2 \\\\\n    &= t \\sigma^2\n\\end{align*}\n:::\n\nIf $k>0$ and $t>0$, the correlation function is\n\n$$\n  \\rho_k \n  = \n    \\frac{\n            cov(x_t, x_{t+k})\n          }{\n            \\sqrt{var(x_t)} \\sqrt{var(x_{t+k})}\n          }\n  =\n    \\frac{t \\sigma^2}{\\sqrt{t \\sigma^2} \\sqrt{(t+k) \\sigma^2}}\n  =\n    \\frac{1}{\\sqrt{1+\\frac{k}{t}}}\n$$\n::::\n\nNote that the covariance of a random walk process depends on $t$. Hence, random walks are non-stationary. The variance is unbounded as $t$ increases. That implies a random walk will not provide good predictions in the long term.\n\nNote that if $0 < k \\ll t$, then $\\rho_k \\approx 1$. Because of this, a correlogram for a random walk will typically demonstrate positive autocorrelations that start near 1 and slowly decrease as $k$ increases. This is exactly what we observed in the simulation above.\n\n## Homework Preview (5 min)\n\n-   Review upcoming homework assignment\n-   Clarify questions\n\n\n\nSolutions1\nWhite Noise\n\n\nThe sample variance of the DWN data is computed using the R command `var(white_noise_df$x)` as 26.29.\n\n\n\n\nSolutionsBackwardShift \n\n\n\n\n\n```{.r .cell-code}\ncat( paste( paste0(\"$x_{\", d_operator$t, \"} = \", d_operator$x, \"$\"), collapse = \",$~$ \" ) ) \n```\n\n$x_{1} = 5$,$~$ $x_{2} = 10$,$~$ $x_{3} = 13$,$~$ $x_{4} = 8$,$~$ $x_{5} = 4$,$~$ $x_{6} = 3$,$~$ $x_{7} = 9$,$~$ $x_{8} = 2$\n\n\n\n\n\nCheck Your Understanding Solutions:\n\n-   $\\mathbf{B} x_8 = x_7 = 9$\n-   $\\mathbf{B}^5 x_8 = x_3 = 13$\n-   $(\\mathbf{B}^5 - \\mathbf{B} ) x_8 = x_3 - x_7 = 13 - 9 = -1$\n-   $( \\mathbf{B}^2 - 6 \\mathbf{B} + 9 ) x_8 = x_6 - 6 (x_7) + 9 (x_{t}) = 3 - 6 (9) + 9 (2) = -33$\n-   $( (\\mathbf{B} - 6) \\mathbf{B} + 9 ) x_8 = -33$\n-   $( \\mathbf{B} - 3 )^2 x_8 = -33$\n-   $( 1 - \\frac{1}{2} B - \\frac{1}{4} B^2 - \\frac{1}{8} B^3 ) x_8 = x_8 - \\frac{1}{2} x_7 - \\frac{1}{4} x_6 - \\frac{1}{8} x_5 = 2 - \\frac{1}{2} (9) - \\frac{1}{4} (3) - \\frac{1}{8} (4) = -3.75$\n\n",
    "supporting": [
      "chapter_4_lesson_1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}