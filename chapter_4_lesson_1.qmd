---
title: "White Noise and Random Walks: Part 1"
subtitle: "Chapter 4: Lesson 1"
format: html
editor: source
sidebar: false
---

```{r}
#| include: false
source("common_functions.R")
```

```{=html}
<script type="text/javascript">
 function showhide(id) {
    var e = document.getElementById(id);
    e.style.display = (e.style.display == 'block') ? 'none' : 'block';
 }
 
 function openTab(evt, tabName) {
    var i, tabcontent, tablinks;
    tabcontent = document.getElementsByClassName("tabcontent");
    for (i = 0; i < tabcontent.length; i++) {
        tabcontent[i].style.display = "none";
    }
    tablinks = document.getElementsByClassName("tablinks");
    for (i = 0; i < tablinks.length; i++) {
        tablinks[i].className = tablinks[i].className.replace(" active", "");
    }
    document.getElementById(tabName).style.display = "block";
    evt.currentTarget.className += " active";
 }    
</script>
```


## Learning Outcomes

{{< include outcomes/chapter_4_lesson_1_outcomes.qmd >}}




## Preparation

-   Read Sections 4.1-4.2, 4.3.1-4.3.2



## Learning Journal Exchange (10 mins)

-   Review another student's journal

-   What would you add to your learning journal after reading another student's?

-   What would you recommend the other student add to their learning journal?

-   Sign the Learning Journal review sheet for your peer



## Class Activity: White Noise (25 min)

### Definition

In this class, we are learning to investigate different types of time series. Up to this point, we have focused mostly on time series with distinct seasonal behavior. We will not focus on what are called *stochastic processes* or random processes, where there is not necessarily a seasonal component. We first focus on **white noise**.

<!-- Check Your Understanding -->

::: {.callout-tip icon=false title="Check Your Understanding"}

-   Based on your understanding from the reading, explain the concept of white noise to your partner.
-   Can you give an example of a time series that would represent white noise?

:::


::: {.callout-note icon=false title="Definition of a Discrete White Noise (DWN) Process"}

A time series $\{w_t: t = 1, 2, \ldots, n\}$ is a **discrete white noise (DWN)** if the variables $w_1, w_2, \ldots, w_n$ are independent and identically distributed with mean 0. The assumption that the variables are identically distributed implies that there is a common variance denoted $\sigma$. The assumption of independence means that the covariance (and correlation) between different variables will be zero: $cov(w_i, w_j) = 0$ and $cor(w_i, w_j) = 0$ if $i \ne j$. 

If the variables are normally distributed, i.e. $w_i \sim N(0,\sigma^2)$, the DWN is called a Gaussian white noise process. The normal distribution is also called the Gaussian distribution, after Carl Friedrich Gauss.

:::




### Simulation

The following simulation illustrates a white noise time series.

```{=html}
 <iframe id="whitenoise" src="https://posit.byui.edu/content/86061d12-80c9-455c-98ff-aca015c75ed1" style="border: none; width: 100%; height: 1100px" frameborder="0"></iframe>
```

<!-- Check Your Understanding -->

::: {.callout-tip icon=false title="Check Your Understanding"}

-   What do you notice about this time series?
-   What characteristics do you observe in the correlogram?

:::

### Type I Errors

In your introductory statistics course, you learned about Type I error.

::: {.callout-note icon=false title="Type I Errors"}

Suppose we will conduct a hypothesis test with a level of significance equal to $\alpha = 0.05$. If the null hypothesis is true, there is a probability of 0.05 that we will reject the null hypothesis. Due to sampling variation, we will reject a true null hypothesis 5% of the time. We refer to this as making a **Type I Error**. 

:::

When we create a correlogram, we actually conduct one hypothesis test for each value of $k$. With so many hypothesis tests, it is not surprising if some of them show a significant correlation due to chance alone. In this case, we tend to disregard correlations that are barely significant and inexplicable.



<!-- Check Your Understanding -->

::: {.callout-tip icon=false title="Check Your Understanding"}

Do the following:

1.    Click on the [Simulate!] button above to generate a new simulated realization of the DWN process.
2.    Out of the 20 autocorrelations represented in the correlogram, count the number that are statistically significant.
3.    Repeat steps 1. and 2. ten times, so you will have displayed 200 autocorrelations.

-   What percentage of your autocorrelations were statistically significant?
-   What percentage of these would you expect to be statistically significant, assuming the true autocorrelations are all zero?

:::



### Visualizing White Noise 

The data in the file [white_noise.parquet](https://byuistats.github.io/timeseries/data/white_noise.parquet) were generated by a Gaussian white noise process.

```{r}
#| echo: false

# Create white noise data file

# Set random seed
set.seed(10)

# Specify means and standard deviation
n <- 2500                           # number of points
white_noise_sigma <- rnorm(1,5,1)   # standard deviation

# Simulate normal data
data.frame(x = rnorm(n, 0, white_noise_sigma)) |>
  rio::export("data/white_noise.parquet")
```

```{r}
# White noise data
white_noise_df <- rio::import("https://byuistats.github.io/timeseries/data/white_noise.parquet")
```

The first 250 points in this time series are illustrated here:

```{r}
#| code-fold: true
#| code-summary: "Show the code"

white_noise_df |> 
  mutate(t = 1:nrow(white_noise_df)) |>
  head(250) |>  
  ggplot(aes(x = t, y = x)) + 
    geom_line() +
    theme_bw() +
    labs(
      x = "Time",
      y = "Values",
      title = "First 250 Values of a Gaussian White Noise Time Series"
    ) +
    theme(
      plot.title = element_text(hjust = 0.5)
    )
```

Here is a histogram of the `r nrow(white_noise_df)` values from this DWN distribution.

```{r}
#| code-fold: true
#| code-summary: "Show the code"
white_noise_df |>
  mutate(density = dnorm(x, mean(white_noise_df$x), sd(white_noise_df$x))) |>
  ggplot(aes(x = x)) +
    geom_histogram(aes(y = after_stat(density)),
        color = "white", fill = "#56B4E9", binwidth = 1) +
    geom_line(aes(x = x, y = density)) +
    theme_bw() +
    labs(
      x = "Values",
      y = "Frequency",
      title = "Histogram of Values from a Gaussian White Noise Process"
    ) +
    theme(
      plot.title = element_text(hjust = 0.5)
    )
```

Notice that the values follow a normal distribution. This suggests the data are from a Gaussian white noise distribution.



### Second-Order Properties

When we refer to the second-order properties of a time series, we are talking about its variance and covariance. The mean is a first-order property, the covariance is a second-order property.

::: {.callout-note icon=false title="Second-Order Properties of a Discrete White Noise Process"}
If $\{w_t\}_{t=1}^n$ is a DWN time series, then the population has the following properties. 

$$ \mu_w = 0 $$
and
$$
  cov(w_t, w_{t+k}) = 
    \begin{cases}
      \sigma^2, & k = 0 \\
      0,        & k \ne 0
    \end{cases}
$$
The correlation function is therefore

$$
  \rho_k = 
    \begin{cases}
      1, & k = 0 \\
      0, & k \ne 0
    \end{cases}
$$

:::

Note that the properties given above are theoretical properties of the population, not estimates computed using a sample. The sample autocorrelations will not equal zero, due to randomness inherent in sampling.



### Fitting the White Noise Model

Typically, a DWN series arises in the random component of another time series. If we have fully explained the level and seasonality in the time series, then the only component left is the random component, which would ideally follow a DWN process.

Since the mean of a DWN time series is zero, the only parameter we need to fit is the variance.

<!-- Check Your Understanding -->

::: {.callout-tip icon=false title="Check Your Understanding"}

-   Compute the sample variance for the DWN data in the file [white_noise.parquet](https://byuistats.github.io/timeseries/data/white_noise.parquet).

:::










## Class Activity: Random Walks (20 min)

### Definitions

<a id="randomwalk">Consider</a> moving on a number line, where your movements are determined by a discrete white noise (DWN) process. Each successive value indicates how far you will move along the number line from your current position. This is mathematically equivalent to allowing your position at time $t$ to be the sum of all the observed DWN values up to time $t$.

::: {.callout-note icon=false title="Definition of a Random Walk"}

Let $\{x_t\}$ be a time series. Then, $\{x_t\}$ is a **random walk** if it can be expressed as
$$
  x_{t} = x_{t-1} + w_{t}
$$
where $\{w_t\}$ is a white noise series.

:::



### Simulating a Random Walk

Do the following: 

1.  Start the time series at $x_0 = 0$.

2.  Toss a coin. 
    -   If the coin shows heads, then $x_t = x_{t-1}+1$
    -   If the coin shows tails, then $x_t = x_{t-1}-1$

3.  Plot the new point on the time plot.

4.  Complete steps 2 and 3 a total of $n=60$ times.

```{r}
#| echo: false

set.seed(7)

df <- data.frame(x=0:60) |>
  mutate(w = ifelse(row_number() == 1, 0, sample(c(-1,1), size = 60, replace = TRUE))) |>
  mutate(y = cumsum(w))

ggplot(data=df, aes(x=x, y=y)) +
  # geom_point(data = df2, aes(x=x, y=y), size = 0.01) +
  geom_line() +
  geom_point(size = 0.5) +
  scale_x_continuous(limits = c(0,60),
                     breaks = seq(0, 60, by = 5),
                     minor_breaks = seq(0, 60, 1)) +
  scale_y_continuous(limits = c(-20,20),
                     breaks = seq(-20, 20, by = 5),
                     minor_breaks = seq(-20, 20, 1)) +
  labs(
      x = "Toss Number",
      y = "Value",
      title = "Cumulative Results of Coin Tosses"
  ) +
  theme_minimal() +
  theme(
    panel.grid.major = element_line(colour = "black")
  ) +
  theme(
    plot.title = element_text(hjust = 0.5)
  )
```

```{r}
#| echo: false
#| eval: false

# This is the grid for the handout 

set.seed(7)

df <- data.frame(x=0:60) |>
  mutate(w = ifelse(row_number() == 1, 0, sample(c(-1,1), size = 60, replace = TRUE))) |>
  mutate(y = cumsum(w))

ggplot(data=df, aes(x=x, y=y)) +
  scale_x_continuous(limits = c(0,60),
                     breaks = seq(0, 60, by = 5),
                     minor_breaks = seq(0, 60, 1)) +
  scale_y_continuous(limits = c(-20,20),
                     breaks = seq(-20, 20, by = 5),
                     minor_breaks = seq(-20, 20, 1)) +
  labs(
      x = "Toss Number",
      y = "Value",
      title = "Cumulative Results of Coin Tosses"
  ) +
  theme_minimal() +
  theme(
    panel.grid.major = element_line(colour = "black")
  ) +
  theme(
    plot.title = element_text(hjust = 0.5)
  )
```




## Homework Preview (5 min)

-   Review upcoming homework assignment
-   Clarify questions


::: {.callout-note icon=false icon=false}

## Download Homework

<a href="https://byuistats.github.io/timeseries/homework/homework_4_1.qmd" download="homework_4_1.qmd"> homework_4_1.qmd </a>

:::


<a href="javascript:showhide('Solutions1')"
style="font-size:.8em;">White Noise</a>
  
::: {#Solutions1 style="display:none;"}

The sample variance of the DWN data is computed using the R command `var(white_noise_df$x)` as `r var(white_noise_df$x) |> round(2)`.
    
:::

