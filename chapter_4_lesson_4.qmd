---
# title: "Fitted Models"
subtitle: "Chapter 4: Lesson 4"
format: html
editor: source
sidebar: false
---

```{r}
#| include: false
source("common_functions.R")
```

```{=html}
<script type="text/javascript">
 function showhide(id) {
    var e = document.getElementById(id);
    e.style.display = (e.style.display == 'block') ? 'none' : 'block';
 }
 
 function openTab(evt, tabName) {
    var i, tabcontent, tablinks;
    tabcontent = document.getElementsByClassName("tabcontent");
    for (i = 0; i < tabcontent.length; i++) {
        tabcontent[i].style.display = "none";
    }
    tablinks = document.getElementsByClassName("tablinks");
    for (i = 0; i < tablinks.length; i++) {
        tablinks[i].className = tablinks[i].className.replace(" active", "");
    }
    document.getElementById(tabName).style.display = "block";
    evt.currentTarget.className += " active";
 }    
</script>
```


## Learning Outcomes

{{< include outcomes/chapter_4_lesson_4_outcomes.qmd >}}




## Preparation

-   Read Sections 4.6-4.7



## Learning Journal Exchange (10 mins)

-   Review another student's journal

-   What would you add to your learning journal after reading another student's?

-   What would you recommend the other student add to their learning journal?

-   Sign the Learning Journal review sheet for your peer



## Class Activity: Fitting Simulated AR Models

We will demonstrate how AR models are fitted via simulation. We will fit both an $AR(1)$ and an $AR(2)$ model.

### Fitting a Simulated $AR(1)$ Model

#### Simulate an $AR(1)$ Time Series

In this simulation, we first simulate data from the $AR(1)$ model
$$
  x_t = 0.75 ~ x_{t-1} + w_t
$$
where $w_t$ is a white noise process with variance 1.

```{r}
#| code-fold: true
#| code-summary: "Show the code"

set.seed(123)
n_rep <- 1000
alpha1 <- 0.75

dat_ts <- tibble(w = rnorm(n_rep)) |>
  mutate(
    index = 1:n(),
    x = purrr::accumulate2(
      lag(w), w, 
      \(acc, nxt, w) alpha1 * acc + w,
      .init = 0)[-1]) |>
  tsibble::as_tsibble(index = index)

dat_ts |> 
  autoplot(.vars = x) +
    labs(
      x = "Time",
      y = "Simulated Time Series",
      title = "Simulated values from an AR(1) Process"
    ) +
    theme_minimal() +
    theme(
      plot.title = element_text(hjust = 0.5)
    )
```


#### Fit an $AR(1)$ Model 

```{r}
#| code-fold: true
#| code-summary: "Show the code"

# Fit the AR(1) model
fit_ar <- dat_ts |>
    model(AR(x ~ order(1)))
```

The estimate of the parameter value (i.e. the fitted value of the parameter) equals `r tidy(fit_ar) |> select(estimate) |> pull() |> round(3)`. This means that our fitted model can be expressed as:

$$
  \hat x_t = `r tidy(fit_ar) |> select(estimate) |> pull() |> round(3)` ~ x_{t-1} + w_t
$$


#### Confidence Interval for the model Parameters

We can compute an approximate 95% confidence interval for $\alpha_1$ as:
$$
  \left( 
    \hat \alpha_1 - 2 \cdot SE_{\hat \alpha_1}
    , ~ 
    \hat \alpha_1 + 2 \cdot SE_{\hat \alpha_1}
  \right)
$$
where $\hat \alpha_1$ is our parameter estimate and $SE_{\hat \alpha_1}$ is the standard error of the estimate. Both of these values are given in the R output.

```{r}
#| code-fold: true
#| code-summary: "Show the code"

ci_summary <- tidy(fit_ar) |>
    mutate(
        lb = estimate - 2 * std.error,
        ub = estimate + 2 * std.error
    )
ci_summary
```

So, our 95% confidence interval for $\alpha_1$ is:
$$
  \left(
  `r ci_summary |> select(estimate) |> pull() |> round(3)` - 2 \cdot `r ci_summary |> select(std.error) |> pull() |> round(3)`
  , ~
  `r ci_summary |> select(estimate) |> pull() |> round(3)` + 2 \cdot `r ci_summary |> select(std.error) |> pull() |> round(3)`
  \right)
$$
or
$$
  \left(
  `r ((ci_summary |> select(estimate) |> pull()) - 2 * (ci_summary |> select(std.error) |> pull())) |> round(3)`
  , ~
  `r ((ci_summary |> select(estimate) |> pull()) + 2 * (ci_summary |> select(std.error) |> pull())) |> round(3)`
  \right)
$$
Note that the confidence interval contains $\alpha_1 = `r alpha1`$, the value of the parameter we used in our simulation. This demonstrates that R is capable of estimating this parameter.

#### Discussion of Residuals
# Working here

```{r}
#| code-fold: true
#| code-summary: "Show the code"

fit_ar |> residuals()
```




### Fitting a Simulated $AR(2)$ Model

#### Simulate an $AR(2)$ Time Series

In this simulation, we first simulate data from the $AR(1)$ model
$$
  x_t = 0.5 ~ x_{t-1} + 0.4 ~ x_{t-2} + w_t
$$
where $w_t$ is a white noise process with variance 1.

```{r}
#| code-fold: true
#| code-summary: "Show the code"

set.seed(123)
n_rep <- 1000
alpha1 <- 0.5
alpha2 <- 0.4

dat_ts <- tibble(w = rnorm(n_rep)) |>
    mutate(
      index = 1:n(),
      x = 0
    ) |>
    tsibble::as_tsibble(index = index)

# Simulate x values
dat_ts$x[1] <- dat_ts$w[1]
dat_ts$x[2] <- alpha1 * dat_ts$x[1] + dat_ts$w[2]
for (i in 3:nrow(dat_ts)) {
  dat_ts$x[i] <- alpha1 * dat_ts$x[i-1] + alpha2 * dat_ts$x[i-2] + dat_ts$w[i]
}

dat_ts |> 
  autoplot(.vars = x) +
    labs(
      x = "Time",
      y = "Simulated Time Series",
      title = "Simulated values from an AR(2) Process"
    ) +
    theme_minimal() +
    theme(
      plot.title = element_text(hjust = 0.5)
    )
```


#### Fit an $AR(2)$ Model 

```{r}
#| code-fold: true
#| code-summary: "Show the code"

# Fit the AR(2) model
fit_ar <- dat_ts |>
    model(AR(x ~ order(2)))
tidy(fit_ar)
```

The estimates of the parameter values (i.e. the fitted values of the parameters) are 
$\hat \alpha_1 = `r tidy(fit_ar) |> filter(term == "ar1") |> select(estimate) |> pull() |> round(3)`$ and $\hat \alpha_2 = `r tidy(fit_ar) |> filter(term == "ar2") |> select(estimate) |> pull() |> round(3)`$ . This means that our fitted model can be expressed as:

$$
  \hat x_t = 
    `r tidy(fit_ar) |> filter(term == "ar1") |> select(estimate) |> pull() |> round(3)` ~ x_{t-1} 
    + 
    `r tidy(fit_ar) |> filter(term == "ar2") |> select(estimate) |> pull() |> round(3)` ~ x_{t-2} 
    + 
    w_t
$$


#### Confidence Interval for the model Parameters

We can compute an approximate 95% confidence interval for $\alpha_i$ as:
$$
  \left( 
    \hat \alpha_i - 2 \cdot SE_{\hat \alpha_i}
    , ~ 
    \hat \alpha_i + 2 \cdot SE_{\hat \alpha_i}
  \right)
$$
where $\hat \alpha_i$ is our estimate of the $i^{th}$ parameter and $SE_{\hat \alpha_i}$ is the standard error of the respective estimate. These values are given in the R output.

```{r}
#| code-fold: true
#| code-summary: "Show the code"

ci_summary <- tidy(fit_ar) |>
    mutate(
        lb = estimate - 2 * std.error,
        ub = estimate + 2 * std.error
    )
ci_summary
```




<!-- Beginning of two columns -->
::: columns
::: {.column width="45%"}

95% confidence interval for $\alpha_1$:
$$
  \left( 
    \hat \alpha_1 - 2 \cdot SE_{\hat \alpha_1}
    , ~ 
    \hat \alpha_1 + 2 \cdot SE_{\hat \alpha_1}
  \right)
$$
$$
  \left(
  `r tidy(fit_ar) |> filter(term == "ar1") |> select(estimate) |> pull() |> round(3)` - 2 \cdot `r tidy(fit_ar) |> filter(term == "ar1") |> select(std.error) |> pull() |> round(3)`
  , ~
  `r tidy(fit_ar) |> filter(term == "ar1") |> select(estimate) |> pull() |> round(3)` + 2 \cdot `r tidy(fit_ar) |> filter(term == "ar1") |> select(std.error) |> pull() |> round(3)`
  \right)
$$
$$
  \left(
  `r ((tidy(fit_ar) |> filter(term == "ar1") |> select(estimate) |> pull()) - 2 * (tidy(fit_ar) |> filter(term == "ar1") |> select(std.error) |> pull())) |> round(3)`
  , ~
  `r ((tidy(fit_ar) |> filter(term == "ar1") |> select(estimate) |> pull()) + 2 * (tidy(fit_ar) |> filter(term == "ar1") |> select(std.error) |> pull())) |> round(3)`
  \right)
$$
This confidence interval contains $\alpha_1 = `r alpha1`$.

:::

::: {.column width="10%"}
<!-- empty column to create gap -->
:::

::: {.column width="45%"}

95% confidence interval for $\alpha_2$:
$$
  \left( 
    \hat \alpha_2 - 2 \cdot SE_{\hat \alpha_2}
    , ~ 
    \hat \alpha_2 + 2 \cdot SE_{\hat \alpha_2}
  \right)
$$
$$
  \left(
  `r tidy(fit_ar) |> filter(term == "ar2") |> select(estimate) |> pull() |> round(3)` - 2 \cdot `r tidy(fit_ar) |> filter(term == "ar2") |> select(std.error) |> pull() |> round(3)`
  , ~
  `r tidy(fit_ar) |> filter(term == "ar2") |> select(estimate) |> pull() |> round(3)` + 2 \cdot `r tidy(fit_ar) |> filter(term == "ar2") |> select(std.error) |> pull() |> round(3)`
  \right)
$$
$$
  \left(
  `r ((tidy(fit_ar) |> filter(term == "ar2") |> select(estimate) |> pull()) - 2 * (tidy(fit_ar) |> filter(term == "ar2") |> select(std.error) |> pull())) |> round(3)`
  , ~
  `r ((tidy(fit_ar) |> filter(term == "ar2") |> select(estimate) |> pull()) + 2 * (tidy(fit_ar) |> filter(term == "ar2") |> select(std.error) |> pull())) |> round(3)`
  \right)
$$
This confidence interval contains $\alpha_2 = `r alpha2`$.

:::
:::
<!-- End of two columns -->

Both confidence intervals contain the true parameter values we used for the simulation.


#### Discussion of Residuals
# Working here - STUFF GOES HERE






## Class Activity: Global Warming (15 min)

```{r}
temps_ts <- rio::import("data/global_temparature.csv") |>
  as_tsibble(index = year)

temps_ts |> autoplot(.vars = change) +
    labs(
      x = "Year",
      y = "Temperature (Celsius)",
      title = "Change in Mean Annual Global Temperature"
    ) +
    theme_minimal() +
    theme(
      plot.title = element_text(hjust = 0.5)
    )

pacf(temps_ts$change)

global_ar <- temps_ts |>
    model(AR(change ~ order(1:9)))

mean(temps_ts$change)

tidy(global_ar) |> filter(str_detect(term, "ar1")) |> nrow()

tidy(global_ar) |> filter(str_detect(term, "ar1")) |> pull(estimate)

coeffs <- tidy(global_ar) |> filter(str_detect(term, "ar1")) |> pull(estimate)
coeffs[1]

residuals(global_ar) |> ACF(lag_max = 50) |> autoplot(.vars = .resid)
```

### Fitting Models (Dynamic Number of Parameters)

### Fitting an $AR(3)$ Model

### Conclusion

No significant values in residuals suggests that the model accounts for variation...but what about the visual and logical argument? Is there an exponential relationship?

-   Bias introduced by the choice of the model -- must be very careful


## Small Group Activity: SectionTitle (xxx min)
## Class Activity: SectionTitle (xxx min)


<!-- Check your Understanding -->

::: {.callout-tip icon=false title="Check Your Understanding"}

-   Question1
-   Question2

:::





## Homework Preview (5 min)

-   Review upcoming homework assignment
-   Clarify questions


::: {.callout-note icon=false}

## Download Homework

<a href="https://byuistats.github.io/timeseries/homework/homework_4_4.qmd" download="homework_4_4.qmd"> homework_4_4.qmd </a>

:::


<a href="javascript:showhide('Solutions1')"
style="font-size:.8em;">Class Activity</a>
  
::: {#Solutions1 style="display:none;"}
    

:::




<a href="javascript:showhide('Solutions')"
style="font-size:.8em;">Class Activity</a>
  
::: {#Solutions2 style="display:none;"}
    

:::




<a href="javascript:showhide('Solutions3')"
style="font-size:.8em;">Class Activity</a>
  
::: {#Solutions3 style="display:none;"}
    

:::



