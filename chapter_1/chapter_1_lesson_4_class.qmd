---
title: "Chapter 1: Lesson 4"
subtitle: "Decomposition of Time Series"
format: html
editor: source
---

```{r}
#| include: false
source("../common_functions.R")
```

## Learning Outcomes

<details>
<summary>Decompose time series into trends, seasonal variation, and residuals</summary>
    -   Obtain residuals as difference between original series and trend + seasonal estimates
</details>
<details>
<summary>Use R to describe key features of time series data</summary>
    -   Remove seasonal variation of a time series
</details>
<details>
<summary>Explain the key theoretical concepts of time series decomposition</summary>
    -   Explain how to remove seasonal variation using an estimate for seasonal component of a time series
</details>



## Preparation

-   Read Sections 1.5.4-1.5.5 and 1.6


## Learning Journal Exchange (10 min)

-   Review another student's journal
-   What would you add to your learning journal after reading your partner's?
-   What would you recommend your partner add to their learning journal?
-   Sign the Learning Journal review sheet for your peer






<!-- ## Random walks (5-10 min) -->

<!-- ```          -->
<!-- -   Definition of a random walk -->
<!-- -   Example: tossing a coin and moving left or right one integer on a number line -->
<!-- ``` -->

<!-- ::: callout-solution -->
<!-- Please add simulation of random walk here -->
<!-- ::: -->






<!-- ## When to use additive vs. multiplicative decomposition (5 min) -->

<!-- -   Additive: Constant variance -->
<!-- -   Multiplicative: Variance grows with the value of the time series -->

## Estimating Monthly Additive Effects (xxxxxxxxxx min)

```{r}
deaths_df <- rio::import("../data/traffic_deaths.xlsx")

deaths_df |> 
  dplyr::select(Month, Year, Deaths)  |> 
  # dplyr::select(Year) %>%
  unique()

# Method 1: Create date from scratch based on pattern of rows
# This only works if the data are in the right order
start_date <- lubridate::ymd("2017-01-01")
date_seq <- seq(start_date,
                start_date + months(nrow(deaths_df)-1),
                by = "1 months")
deaths_tibble <- tibble(
  dates = date_seq,
  year = lubridate::year(date_seq),
  month = lubridate::month(date_seq),
  value = pull(deaths_df, Deaths)
)

# Method 2: Build using the given date information
deaths_tibble <- deaths_df |>
  mutate(
    date_str = paste("1", Month, Year),
    dates = dmy(date_str),
    year = lubridate::year(dates),
    month = lubridate::month(dates),
    value = Deaths
  ) |>
  dplyr::select(dates, year, month, value)  |> 
  tibble()

deaths_ts <- deaths_tibble |>
  mutate(index = tsibble::yearmonth(dates)) |>
  as_tsibble(index = index)

deaths_ts <- deaths_ts %>% 
  mutate(
    m_hat = (
          (1/2) * lag(value,6)
          + lag(value,5)
          + lag(value,4)
          + lag(value,3)
          + lag(value,2)
          + lag(value,1)
          + value
          + lead(value,1)
          + lead(value,2)
          + lead(value,3)
          + lead(value,4)
          + lead(value,5 )
          + (1/2) * lead(value,6)
        ) / 12
  )
```

### Without adjusting the y-axis
```{r}
autoplot(deaths_ts, .vars = value) +
  labs(
    x = "Date",
    y = "Traffic Fatalities",
    title = "Traffic Fatalities in the United States (by Month)"
  ) +
  theme(plot.title = element_text(hjust = 0.5))
```

### After adjusting the y-axis
```{r}
autoplot(deaths_ts, .vars = value) +
  labs(
    x = "Date",
    y = "Traffic Fatalities",
    title = "Traffic Fatalities in the United States (by Month)"
  ) +
  ylim(c(0,4500)) +
  theme(plot.title = element_text(hjust = 0.5))
```


```{r}
# Compute s_hat
deaths_shat_df <- deaths_ts |>
  data.frame() |>
  mutate(month = month(dates, label=TRUE)) |>
  mutate(s_hat = value - m_hat)

deaths_shat_df |>
  dplyr::select(year, month, s_hat) |> 
  group_by(month) |>
  round_df(1) |>
  mutate(s_hat_bar = mean(s_hat, na.rm = TRUE)) |>
  pivot_wider(values_from = "s_hat", names_from = "year") |>
  dplyr::select("month", "2017", "2018", "2019", "2020", "2021", "s_hat_bar") |>
  # group_by() |>summarize(sum = sum(s_hat_bar))
  display_table()


```

### Visualize moving average, m-hat (computed for you)
### Compute s-hat for a few values
### Observe s-hat-bar
### Adjust s-hat-bar to have mean 0
### Use s-hat-bar to....
#### Seasonally adjusted data
#### Remove seasonal effect



## Decomposition of a Time Series in Excel (40 min)

::: callout-caution
Provide 36 months worth of data

Students will compute a mean by hand

Students will compute (some values of) the additive decomposition by hand (Partial table given)

-   Students will compute some values of the centered moving average by hand
-   Students will compute some values of the monthly additive effect by hand
-   Students will compute some values of the seasonally adjusted series by hand
-   Students will plot some values of the decomposed time series by hand (Plot given)
:::

## Recap (5 min)

```         
-   Review objectives and key concepts
-   Clarify questions on course or time series data
```
